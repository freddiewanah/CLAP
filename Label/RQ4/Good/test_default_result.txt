#Method to be tested:
def uri(self, scheme: t.Optional[URLScheme]=URLScheme.HTTPS, tld_type: t.Optional[TLDType]=None, subdomains: t.Optional[t.List[str]]=None, query_params_count: t.Optional[int]=None) -> str:
    """Generate a random URI.

        :param scheme: Scheme.
        :param tld_type: TLDType.
        :param subdomains: List of subdomains (make sure they are valid).
        :param query_params_count: Query params.
        :return: URI.
        """
    directory = self._datetime.date(start=2010, end=self._datetime._CURRENT_YEAR).strftime('%Y-%m-%d').replace('-', '/')
    url = self.url(scheme, None, tld_type, subdomains)
    uri = f'{url}{directory}/{self.slug()}'
    if query_params_count:
        uri += f'?{self.query_string(query_params_count)}'
    return uri
#Unit test:

def test_default(self, net):
    uri = net.uri()
    "<AssertPlaceholder1>"


#Generated assertions:

#Generated assertions:
assert uri.startswith(URLScheme.HTTPS.value)


----------
    assert uri.split(':')[0].strip() == 'https'