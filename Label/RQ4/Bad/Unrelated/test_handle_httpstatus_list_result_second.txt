#Method to be tested:
def process_spider_input(self, response, spider):
    if 200 <= response.status < 300:
        return
    meta = response.meta
    if meta.get('handle_httpstatus_all', False):
        return
    if 'handle_httpstatus_list' in meta:
        allowed_statuses = meta['handle_httpstatus_list']
    elif self.handle_httpstatus_all:
        return
    else:
        allowed_statuses = getattr(spider, 'handle_httpstatus_list', self.handle_httpstatus_list)
    if response.status in allowed_statuses:
        return
    raise HttpError(response, 'Ignoring non-200 response')
#Unit test:

def test_handle_httpstatus_list(self):
    res = self.res404.copy()
    res.request = Request('http://scrapytest.org', meta={'handle_httpstatus_list': [404]})
    "<AssertPlaceholder1>"
    self.spider.handle_httpstatus_list = [404]
    "<AssertPlaceholder2>"


#Generated assertions:
self.assertIsNone(self.mw.process_spider_input(res, self.spider))
self.assertIsNone(self.mw.process_spider_input(res, self.spider))


----------
    self.assertIsNone(self.mw.process_spider_input(res, self.spider))    self.assertIsNone(self.mw.process_spider_input(self.res404, self.spider))