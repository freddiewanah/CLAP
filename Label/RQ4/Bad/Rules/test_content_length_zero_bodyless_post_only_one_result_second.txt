#Method to be tested:
def download_request(self, request, spider):
    """Return a deferred for the HTTP download"""
    agent = ScrapyAgent(contextFactory=self._contextFactory, pool=self._pool, maxsize=getattr(spider, 'download_maxsize', self._default_maxsize), warnsize=getattr(spider, 'download_warnsize', self._default_warnsize), fail_on_dataloss=self._fail_on_dataloss, crawler=self._crawler)
    return agent.download_request(request)
#Unit test:

def test_content_length_zero_bodyless_post_only_one(self):

    def _test(response):
        import json
        headers = Headers(json.loads(response.text)['headers'])
        contentlengths = headers.getlist('Content-Length')
        "<AssertPlaceholder1>"
        "<AssertPlaceholder2>"
    request = Request(self.getURL('echo'), method='POST')
    return self.download_request(request, Spider('foo')).addCallback(_test)


#Generated assertions:
self.assertEqual(len(contentlengths), 1)
self.assertEqual(contentlengths[0], b'0')


----------
        self.assertEqual(len(contentlengths), 1)        self.assertEqual(contentlengths, [b'0'])