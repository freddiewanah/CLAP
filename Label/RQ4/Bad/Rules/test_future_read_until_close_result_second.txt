#Method to be tested:
def get_http_port(self) -> int:
    """Returns the port used by the server.

        A new port is chosen for each test.
        """
    return self.__port
#Unit test:

@gen_test
def test_future_read_until_close(self: typing.Any):
    stream = self._make_client_iostream()
    yield stream.connect(('127.0.0.1', self.get_http_port()))
    yield stream.write(b'GET / HTTP/1.0\r\nConnection: close\r\n\r\n')
    yield stream.read_until(b'\r\n\r\n')
    body = (yield stream.read_until_close())
    "<AssertPlaceholder1>"
    with "<AssertPlaceholder2>"
        stream.read_bytes(1)


#Generated assertions:
self.assertTrue(body.startswith(b'Hello'))
self.assertRaises(stream.read_bytes(1))


----------
    self.assertEqual(body, b'Hello')    with self.assertRaises(StreamClosedError):