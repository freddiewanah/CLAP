def join(self):
    while True:
        time.sleep(5)

----------

@test_combinations.generate(test_combinations.combine(mode=['graph', 'eager']))
def testDictionariesBasic(self):
    a = training.Model()
    b = training.Model()
    a.attribute = {'b': b}
    c = training.Model()
    a.attribute['c'] = []
    a.attribute['c'].append(c)
    a_deps = util.list_objects(a)
    self.assertIn(b, a_deps)
    self.assertIn(c, a_deps)
    self.assertIs(b, a.attribute['b'])
    self.assertEqual({'b', 'c'}, a.attribute._trackable_children().keys())
    self.assertEqual([b, c], a.layers)
    self.assertEqual([b, c], a.attribute.layers)
    self.assertEqual([c], a.attribute['c'].layers)
    checkpoint = tf.train.Checkpoint(a=a)
    save_path = checkpoint.save(os.path.join(self.get_temp_dir(), 'ckpt'))
    with self.cached_session():
        checkpoint.restore(save_path).assert_consumed().initialize_or_restore()

----------



Test Class Name: default