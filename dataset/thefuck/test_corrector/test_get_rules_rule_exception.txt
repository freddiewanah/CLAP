def get_rules():
    """Returns all enabled rules.

    :rtype: [Rule]

    """
    paths = [rule_path for path in get_rules_import_paths() for rule_path in sorted(path.glob('*.py'))]
    return sorted(get_loaded_rules(paths), key=lambda rule: rule.priority)

----------

def test_get_rules_rule_exception(mocker, glob):
    load_source = mocker.patch('thefuck.types.load_source', side_effect=ImportError('No module named foo...'))
    glob([Path('git.py')])
    assert not corrector.get_rules()
    load_source.assert_called_once_with('git', 'git.py')

----------



Test Class Name: TestGetRules