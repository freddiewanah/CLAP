def info(self):
    """Returns the name and version of the current shell"""
    try:
        version = self._get_version()
    except Exception as e:
        warn(u'Could not determine shell version: {}'.format(e))
        version = ''
    return u'{} {}'.format(self.friendly_name, version).rstrip()

----------

@pytest.mark.parametrize('side_effect, expected_info, warn', [([u'3.5.9'], u'Generic Shell 3.5.9', False), ([OSError], u'Generic Shell', True)])
def test_info(self, side_effect, expected_info, warn, shell, mocker):
    warn_mock = mocker.patch('thefuck.shells.generic.warn')
    shell._get_version = mocker.Mock(side_effect=side_effect)
    assert shell.info() == expected_info
    assert warn_mock.called is warn
    assert shell._get_version.called

----------



Test Class Name: TestGeneric