@git_support
def match(command):
    return 'push' in command.script_parts and 'git push --set-upstream' in command.output

----------

@pytest.mark.parametrize('script, output, actual_scm', [('git log', '', 'hg'), ('git log', 'fatal: Not a git repository (or any of the parent directories): .git', None), ('hg log', "abort: no repository found in '/home/nvbn/exp/thefuck' (.hg not found)!", None), ('not-scm log', "abort: no repository found in '/home/nvbn/exp/thefuck' (.hg not found)!", 'git')])
def test_not_match(get_actual_scm_mock, script, output, actual_scm):
    get_actual_scm_mock.return_value = actual_scm
    assert not match(Command(script, output))

----------



Test Class Name: default