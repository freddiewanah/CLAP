@git_support
def match(command):
    return 'push' in command.script_parts and 'git push --set-upstream' in command.output

----------

@pytest.mark.parametrize('script, output, actual_scm', [('git log', 'fatal: Not a git repository (or any of the parent directories): .git', 'hg'), ('hg log', "abort: no repository found in '/home/nvbn/exp/thefuck' (.hg not found)!", 'git')])
def test_match(get_actual_scm_mock, script, output, actual_scm):
    get_actual_scm_mock.return_value = actual_scm
    assert match(Command(script, output))

----------



Test Class Name: default