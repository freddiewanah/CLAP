@git_support
def match(command):
    return 'push' in command.script_parts and 'git push --set-upstream' in command.output

----------

@pytest.mark.parametrize('command, packages, which', [(Command('a_bad_cmd', 'a_bad_cmd: command not found'), [], None), (Command('vim', ''), [], None), (Command('', ''), [], None), (Command('vim', 'vim: command not found'), ['vim'], '/usr/bin/vim'), (Command('sudo vim', 'vim: command not found'), ['vim'], '/usr/bin/vim')])
def test_not_match(mocker, command, packages, which):
    mocker.patch('thefuck.rules.apt_get.which', return_value=which)
    mocker.patch('thefuck.rules.apt_get._get_packages', create=True, return_value=packages)
    assert not match(command)

----------



Test Class Name: default