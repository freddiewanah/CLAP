def parse(self, argv):
    arguments = self._prepare_arguments(argv[1:])
    return self._parser.parse_args(arguments)

----------

@pytest.mark.parametrize('argv, result', [(['thefuck'], _args()), (['thefuck', '-a'], _args(alias='fuck')), (['thefuck', '--alias', '--enable-experimental-instant-mode'], _args(alias='fuck', enable_experimental_instant_mode=True)), (['thefuck', '-a', 'fix'], _args(alias='fix')), (['thefuck', 'git', 'branch', ARGUMENT_PLACEHOLDER, '-y'], _args(command=['git', 'branch'], yes=True)), (['thefuck', 'git', 'branch', '-a', ARGUMENT_PLACEHOLDER, '-y'], _args(command=['git', 'branch', '-a'], yes=True)), (['thefuck', ARGUMENT_PLACEHOLDER, '-v'], _args(version=True)), (['thefuck', ARGUMENT_PLACEHOLDER, '--help'], _args(help=True)), (['thefuck', 'git', 'branch', '-a', ARGUMENT_PLACEHOLDER, '-y', '-d'], _args(command=['git', 'branch', '-a'], yes=True, debug=True)), (['thefuck', 'git', 'branch', '-a', ARGUMENT_PLACEHOLDER, '-r', '-d'], _args(command=['git', 'branch', '-a'], repeat=True, debug=True)), (['thefuck', '-l', '/tmp/log'], _args(shell_logger='/tmp/log')), (['thefuck', '--shell-logger', '/tmp/log'], _args(shell_logger='/tmp/log'))])
def test_parse(argv, result):
    assert vars(Parser().parse(argv)) == result

----------



Test Class Name: default