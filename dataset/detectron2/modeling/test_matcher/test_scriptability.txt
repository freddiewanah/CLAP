def get_cfg() -> CfgNode:
    """
    Get a copy of the default config.

    Returns:
        a detectron2 CfgNode instance.
    """
    from .defaults import _C
    return _C.clone()

----------

def test_scriptability(self):
    cfg = get_cfg()
    anchor_matcher = Matcher(cfg.MODEL.RPN.IOU_THRESHOLDS, cfg.MODEL.RPN.IOU_LABELS, allow_low_quality_matches=True)
    match_quality_matrix = torch.tensor([[0.15, 0.45, 0.2, 0.6], [0.3, 0.65, 0.05, 0.1], [0.05, 0.4, 0.25, 0.4]])
    expected_matches = torch.tensor([1, 1, 2, 0])
    expected_match_labels = torch.tensor([-1, 1, 0, 1], dtype=torch.int8)
    (matches, match_labels) = anchor_matcher(match_quality_matrix)
    self.assertTrue(torch.allclose(matches, expected_matches))
    self.assertTrue(torch.allclose(match_labels, expected_match_labels))
    from detectron2.layers import nonzero_tuple

    def f(thresholds: List[float], labels: List[int]):
        return Matcher(thresholds, labels, allow_low_quality_matches=True)
    scripted_anchor_matcher = torch.jit.script(f)(cfg.MODEL.RPN.IOU_THRESHOLDS, cfg.MODEL.RPN.IOU_LABELS)
    (matches, match_labels) = scripted_anchor_matcher(match_quality_matrix)
    self.assertTrue(torch.allclose(matches, expected_matches))
    self.assertTrue(torch.allclose(match_labels, expected_match_labels))

----------



Test Class Name: TestMatcher