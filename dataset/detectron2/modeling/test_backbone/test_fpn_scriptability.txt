@BACKBONE_REGISTRY.register()
def build_resnet_fpn_backbone(cfg, input_shape: ShapeSpec):
    """
    Args:
        cfg: a detectron2 CfgNode

    Returns:
        backbone (Backbone): backbone module, must be a subclass of :class:`Backbone`.
    """
    bottom_up = build_resnet_backbone(cfg, input_shape)
    in_features = cfg.MODEL.FPN.IN_FEATURES
    out_channels = cfg.MODEL.FPN.OUT_CHANNELS
    backbone = FPN(bottom_up=bottom_up, in_features=in_features, out_channels=out_channels, norm=cfg.MODEL.FPN.NORM, top_block=LastLevelMaxPool(), fuse_type=cfg.MODEL.FPN.FUSE_TYPE)
    return backbone

----------

def test_fpn_scriptability(self):
    cfg = model_zoo.get_config('Misc/scratch_mask_rcnn_R_50_FPN_3x_gn.yaml')
    bb = build_resnet_fpn_backbone(cfg, ShapeSpec(channels=3))
    bb_s = torch.jit.script(bb)
    inp = torch.rand(2, 3, 128, 128)
    out1 = bb(inp)['p5']
    out2 = bb_s(inp)['p5']
    self.assertTrue(torch.allclose(out1, out2))

----------



Test Class Name: TestBackBone