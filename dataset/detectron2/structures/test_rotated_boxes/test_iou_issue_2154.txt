def pairwise_iou_rotated(boxes1, boxes2):
    """
    Return intersection-over-union (Jaccard index) of boxes.

    Both sets of boxes are expected to be in
    (x_center, y_center, width, height, angle) format.

    Arguments:
        boxes1 (Tensor[N, 5])
        boxes2 (Tensor[M, 5])

    Returns:
        iou (Tensor[N, M]): the NxM matrix containing the pairwise
            IoU values for every element in boxes1 and boxes2
    """
    return torch.ops.detectron2.box_iou_rotated(boxes1, boxes2)

----------

def test_iou_issue_2154(self):
    for device in ['cpu'] + (['cuda'] if torch.cuda.is_available() else []):
        boxes1 = torch.tensor([[296.6620178222656, 458.73883056640625, 23.515729904174805, 47.677001953125, 0.08795166015625]], device=device)
        boxes2 = torch.tensor([[296.66201, 458.73882000000003, 23.51573, 47.67702, 0.087951]], device=device)
        ious = pairwise_iou_rotated(boxes1, boxes2)
        expected_ious = torch.tensor([[1.0]], dtype=torch.float32)
        self.assertTrue(torch.allclose(ious.cpu(), expected_ious))

----------



Test Class Name: TestRotatedBoxesLayer