def repository_has_cookiecutter_json(repo_directory):
    """Determine if `repo_directory` contains a `cookiecutter.json` file.

    :param repo_directory: The candidate repository directory.
    :return: True if the `repo_directory` is valid, else False.
    """
    repo_directory_exists = os.path.isdir(repo_directory)
    repo_config_exists = os.path.isfile(os.path.join(repo_directory, 'cookiecutter.json'))
    return repo_directory_exists and repo_config_exists

----------

@pytest.mark.parametrize('invalid_repository', ['tests/fake-repo-bad', 'tests/unknown-repo'])
def test_invalid_repository(invalid_repository):
    """Validate correct response if `cookiecutter.json` file not exist."""
    assert not repository_has_cookiecutter_json(invalid_repository)

----------



Test Class Name: default