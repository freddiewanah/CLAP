def read_user_dict(var_name, default_value):
    """Prompt the user to provide a dictionary of data.

    :param str var_name: Variable as specified in the context
    :param default_value: Value that will be returned if no input is provided
    :return: A Python dictionary to use in the context.
    """
    if not isinstance(default_value, dict):
        raise TypeError
    user_value = click.prompt(var_name, default=DEFAULT_DISPLAY, type=click.STRING, value_proc=functools.partial(process_json, default_value=default_value))
    if click.__version__.startswith('7.') and user_value == DEFAULT_DISPLAY:
        return default_value
    return user_value

----------

@pytest.mark.parametrize('input', ['\n', 'default\n'])
def test_read_user_dict_default_value(mocker, input):
    """Make sure that `read_user_dict` returns the default value.

    Verify return of a dict variable rather than the display value.
    """
    runner = click.testing.CliRunner()
    with runner.isolation(input=input):
        val = read_user_dict('name', {'project_slug': 'pytest-plugin'})
    assert val == {'project_slug': 'pytest-plugin'}

----------



Test Class Name: default