def read_user_dict(var_name, default_value):
    """Prompt the user to provide a dictionary of data.

    :param str var_name: Variable as specified in the context
    :param default_value: Value that will be returned if no input is provided
    :return: A Python dictionary to use in the context.
    """
    if not isinstance(default_value, dict):
        raise TypeError
    user_value = click.prompt(var_name, default=DEFAULT_DISPLAY, type=click.STRING, value_proc=functools.partial(process_json, default_value=default_value))
    if click.__version__.startswith('7.') and user_value == DEFAULT_DISPLAY:
        return default_value
    return user_value

----------

def test_should_call_prompt_with_process_json(mocker):
    """Test to make sure that `process_json` is actually being used.

    Verifies generation of a processor for the user input.
    """
    mock_prompt = mocker.patch('cookiecutter.prompt.click.prompt', autospec=True)
    read_user_dict('name', {'project_slug': 'pytest-plugin'})
    (args, kwargs) = mock_prompt.call_args
    assert args == ('name',)
    assert kwargs['type'] == click.STRING
    assert kwargs['default'] == 'default'
    assert kwargs['value_proc'].func == process_json

----------



Test Class Name: default