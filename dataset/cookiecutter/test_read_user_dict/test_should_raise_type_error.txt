def read_user_dict(var_name, default_value):
    """Prompt the user to provide a dictionary of data.

    :param str var_name: Variable as specified in the context
    :param default_value: Value that will be returned if no input is provided
    :return: A Python dictionary to use in the context.
    """
    if not isinstance(default_value, dict):
        raise TypeError
    user_value = click.prompt(var_name, default=DEFAULT_DISPLAY, type=click.STRING, value_proc=functools.partial(process_json, default_value=default_value))
    if click.__version__.startswith('7.') and user_value == DEFAULT_DISPLAY:
        return default_value
    return user_value

----------

def test_should_raise_type_error(mocker):
    """Test `default_value` arg verification in `read_user_dict` function."""
    prompt = mocker.patch('cookiecutter.prompt.click.prompt')
    with pytest.raises(TypeError):
        read_user_dict('name', 'russell')
    assert not prompt.called

----------



Test Class Name: default