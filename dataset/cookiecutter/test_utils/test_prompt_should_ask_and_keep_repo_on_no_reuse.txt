def prompt_and_delete(path, no_input=False):
    """
    Ask user if it's okay to delete the previously-downloaded file/directory.

    If yes, delete it. If no, checks to see if the old version should be
    reused. If yes, it's reused; otherwise, Cookiecutter exits.

    :param path: Previously downloaded zipfile.
    :param no_input: Suppress prompt to delete repo and just delete it.
    :return: True if the content was deleted
    """
    if no_input:
        ok_to_delete = True
    else:
        question = f"You've downloaded {path} before. Is it okay to delete and re-download it?"
        ok_to_delete = read_user_yes_no(question, 'yes')
    if ok_to_delete:
        if os.path.isdir(path):
            rmtree(path)
        else:
            os.remove(path)
        return True
    else:
        ok_to_reuse = read_user_yes_no('Do you want to re-use the existing version?', 'yes')
        if ok_to_reuse:
            return False
        sys.exit()

----------

def test_prompt_should_ask_and_keep_repo_on_no_reuse(mocker, tmp_path):
    """In `prompt_and_delete()`, if the user wants to keep their old     cloned template repo, it should not be deleted."""
    mock_read_user = mocker.patch('cookiecutter.utils.read_user_yes_no', return_value=False, autospec=True)
    repo_dir = Path(tmp_path, 'repo')
    repo_dir.mkdir()
    with pytest.raises(SystemExit):
        utils.prompt_and_delete(str(repo_dir))
    assert mock_read_user.called
    assert repo_dir.exists()

----------



Test Class Name: default