def make_sure_path_exists(path: 'os.PathLike[str]') -> None:
    """Ensure that a directory exists.

    :param path: A directory tree path for creation.
    """
    logger.debug('Making sure path exists (creates tree if not exist): %s', path)
    try:
        Path(path).mkdir(parents=True, exist_ok=True)
    except OSError as error:
        raise OSError(f'Unable to create directory at {path}') from error

----------

def test_make_sure_path_exists_correctly_handle_os_error(mocker):
    """Verify correct True/False response from `utils.make_sure_path_exists`.

    Should return True if directory exist or created.
    Should return False if impossible to create directory (for example protected)
    """
    mocker.patch('pathlib.Path.mkdir', side_effect=OSError)
    with pytest.raises(OSError) as err:
        utils.make_sure_path_exists(Path('protected_path'))
    assert str(err.value) == 'Unable to create directory at protected_path'

----------



Test Class Name: default