def render_variable(env, raw, cookiecutter_dict):
    """Render the next variable to be displayed in the user prompt.

    Inside the prompting taken from the cookiecutter.json file, this renders
    the next variable. For example, if a project_name is "Peanut Butter
    Cookie", the repo_name could be be rendered with:

        `{{ cookiecutter.project_name.replace(" ", "_") }}`.

    This is then presented to the user as the default.

    :param Environment env: A Jinja2 Environment object.
    :param raw: The next value to be prompted for by the user.
    :param dict cookiecutter_dict: The current context as it's gradually
        being populated with variables.
    :return: The rendered value for the default variable.
    """
    if raw is None or isinstance(raw, bool):
        return raw
    elif isinstance(raw, dict):
        return {render_variable(env, k, cookiecutter_dict): render_variable(env, v, cookiecutter_dict) for (k, v) in raw.items()}
    elif isinstance(raw, list):
        return [render_variable(env, v, cookiecutter_dict) for v in raw]
    elif not isinstance(raw, str):
        raw = str(raw)
    template = env.from_string(raw)
    return template.render(cookiecutter=cookiecutter_dict)

----------

@pytest.mark.parametrize('raw_var, rendered_var', [(1, '1'), (True, True), ('foo', 'foo'), ('{{cookiecutter.project}}', 'foobar'), (None, None)])
def test_convert_to_str(self, mocker, raw_var, rendered_var):
    """Verify simple items correctly rendered to strings."""
    env = environment.StrictEnvironment()
    from_string = mocker.patch('cookiecutter.prompt.StrictEnvironment.from_string', wraps=env.from_string)
    context = {'project': 'foobar'}
    result = prompt.render_variable(env, raw_var, context)
    assert result == rendered_var
    if raw_var is not None and (not isinstance(raw_var, bool)):
        if not isinstance(raw_var, str):
            raw_var = str(raw_var)
        from_string.assert_called_once_with(raw_var)
    else:
        assert not from_string.called

----------



Test Class Name: TestRenderVariable