def merge_configs(default, overwrite):
    """Recursively update a dict with the key/value pair of another.

    Dict values that are dictionaries themselves will be updated, whilst
    preserving existing keys.
    """
    new_config = copy.deepcopy(default)
    for (k, v) in overwrite.items():
        if isinstance(v, dict):
            new_config[k] = merge_configs(default.get(k, {}), v)
        else:
            new_config[k] = v
    return new_config

----------

def test_merge_configs():
    """Verify default and user config merged in expected way."""
    default = {'cookiecutters_dir': '/home/example/some-path-to-templates', 'replay_dir': '/home/example/some-path-to-replay-files', 'default_context': {}, 'abbreviations': {'gh': 'https://github.com/{0}.git', 'gl': 'https://gitlab.com/{0}.git', 'bb': 'https://bitbucket.org/{0}'}}
    user_config = {'default_context': {'full_name': 'Raphael Pierzina', 'github_username': 'hackebrot'}, 'abbreviations': {'gl': 'https://gitlab.com/hackebrot/{0}.git', 'pytest-plugin': 'https://github.com/pytest-dev/pytest-plugin.git'}}
    expected_config = {'cookiecutters_dir': '/home/example/some-path-to-templates', 'replay_dir': '/home/example/some-path-to-replay-files', 'default_context': {'full_name': 'Raphael Pierzina', 'github_username': 'hackebrot'}, 'abbreviations': {'gh': 'https://github.com/{0}.git', 'gl': 'https://gitlab.com/hackebrot/{0}.git', 'bb': 'https://bitbucket.org/{0}', 'pytest-plugin': 'https://github.com/pytest-dev/pytest-plugin.git'}}
    assert config.merge_configs(default, user_config) == expected_config

----------



Test Class Name: default