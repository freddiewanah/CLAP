def get_case_path(subdir_name: str, name: str, data: bool=True, suffix: str=PYTHON_SUFFIX) -> Path:
    """Get case path from name"""
    case_path = get_base_dir(data) / subdir_name / name
    if not name.endswith(ALLOWED_SUFFIXES):
        case_path = case_path.with_suffix(suffix)
    assert case_path.is_file(), f'{case_path} is not a file.'
    return case_path

----------

def test_cache_isnt_written_if_no_jupyter_deps_dir(monkeypatch: MonkeyPatch, tmp_path: pathlib.Path) -> None:
    jupyter_dependencies_are_installed.cache_clear()
    nb = get_case_path('jupyter', 'notebook_trailing_newline.ipynb')
    tmp_nb = tmp_path / 'notebook.ipynb'
    with open(nb) as src, open(tmp_nb, 'w') as dst:
        dst.write(src.read())
    monkeypatch.setattr('black.files.jupyter_dependencies_are_installed', lambda verbose, quiet: False)
    result = runner.invoke(main, [str(tmp_path), f'--config={EMPTY_CONFIG}'])
    assert 'No Python files are present to be formatted. Nothing to do' in result.output
    jupyter_dependencies_are_installed.cache_clear()
    monkeypatch.setattr('black.files.jupyter_dependencies_are_installed', lambda verbose, quiet: True)
    result = runner.invoke(main, [str(tmp_path), f'--config={EMPTY_CONFIG}'])
    assert 'reformatted' in result.output

----------



Test Class Name: default