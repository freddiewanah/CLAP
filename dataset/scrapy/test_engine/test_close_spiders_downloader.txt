def close(self) -> Deferred:
    """
        Gracefully close the execution engine.
        If it has already been started, stop it. In all cases, close the spider and the downloader.
        """
    if self.running:
        return self.stop()
    if self.spider is not None:
        return self.close_spider(self.spider, reason='shutdown')
    return succeed(self.downloader.close())

----------

@defer.inlineCallbacks
def test_close_spiders_downloader(self):
    with pytest.warns(ScrapyDeprecationWarning, match='ExecutionEngine.open_spiders is deprecated, please use ExecutionEngine.spider instead'):
        e = ExecutionEngine(get_crawler(TestSpider), lambda _: None)
        yield e.open_spider(TestSpider(), [])
        self.assertEqual(len(e.open_spiders), 1)
        yield e.close()
        self.assertEqual(len(e.open_spiders), 0)

----------



Test Class Name: EngineTest