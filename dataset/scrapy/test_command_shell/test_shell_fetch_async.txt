def execute(self, args, check_code=True, settings=None):
    from twisted.internet import reactor
    env = os.environ.copy()
    if settings is not None:
        env['SCRAPY_SETTINGS_MODULE'] = settings
    cmd = self.prefix + [self.command] + list(args)
    pp = TestProcessProtocol()
    pp.deferred.addBoth(self._process_finished, cmd, check_code)
    reactor.spawnProcess(pp, cmd[0], cmd, env=env, path=self.cwd)
    return pp.deferred

----------

@defer.inlineCallbacks
def test_shell_fetch_async(self):
    reactor_path = 'twisted.internet.asyncioreactor.AsyncioSelectorReactor'
    url = self.url('/html')
    code = f"fetch('{url}')"
    args = ['-c', code, '--set', f'TWISTED_REACTOR={reactor_path}']
    (_, _, err) = (yield self.execute(args, check_code=True))
    self.assertNotIn(b'RuntimeError: There is no current event loop in thread', err)
    self.assertEqual(err, '')

----------



Test Class Name: ShellTest