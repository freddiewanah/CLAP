def close(self):
    active = []
    for (p, q) in self.queues.items():
        active.append(p)
        q.close()
    return active

----------

def test_queue_push_pop_one(self):
    temp_dir = tempfile.mkdtemp()
    queue = ScrapyPriorityQueue.from_crawler(self.crawler, FifoMemoryQueue, temp_dir)
    self.assertIsNone(queue.pop())
    self.assertEqual(len(queue), 0)
    req1 = Request('https://example.org/1', priority=1)
    queue.push(req1)
    self.assertEqual(len(queue), 1)
    dequeued = queue.pop()
    self.assertEqual(len(queue), 0)
    self.assertEqual(dequeued.url, req1.url)
    self.assertEqual(dequeued.priority, req1.priority)
    self.assertEqual(queue.close(), [])

----------



Test Class Name: PriorityQueueTest