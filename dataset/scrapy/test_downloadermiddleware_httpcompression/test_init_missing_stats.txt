@classmethod
def from_crawler(cls, crawler):
    if not crawler.settings.getbool('COMPRESSION_ENABLED'):
        raise NotConfigured
    try:
        return cls(stats=crawler.stats)
    except TypeError:
        warnings.warn("HttpCompressionMiddleware subclasses must either modify their '__init__' method to support a 'stats' parameter or reimplement the 'from_crawler' method.", ScrapyDeprecationWarning)
        result = cls()
        result.stats = crawler.stats
        return result

----------

def test_init_missing_stats(self):

    class HttpCompressionMiddlewareSubclass(HttpCompressionMiddleware):

        def __init__(self):
            super().__init__()
    crawler = get_crawler(Spider)
    with catch_warnings(record=True) as caught_warnings:
        HttpCompressionMiddlewareSubclass.from_crawler(crawler)
    messages = tuple((str(warning.message) for warning in caught_warnings if warning.category is ScrapyDeprecationWarning))
    self.assertEqual(messages, ("HttpCompressionMiddleware subclasses must either modify their '__init__' method to support a 'stats' parameter or reimplement the 'from_crawler' method.",))

----------



Test Class Name: HttpCompressionSubclassTest