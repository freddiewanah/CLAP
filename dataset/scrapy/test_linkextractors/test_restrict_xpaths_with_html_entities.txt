def extract_links(self, response):
    """Returns a list of :class:`~scrapy.link.Link` objects from the
        specified :class:`response <scrapy.http.Response>`.

        Only links that match the settings passed to the ``__init__`` method of
        the link extractor are returned.

        Duplicate links are omitted if the ``unique`` attribute is set to ``True``,
        otherwise they are returned.
        """
    base_url = get_base_url(response)
    if self.restrict_xpaths:
        docs = [subdoc for x in self.restrict_xpaths for subdoc in response.xpath(x)]
    else:
        docs = [response.selector]
    all_links = []
    for doc in docs:
        links = self._extract_links(doc, response.url, response.encoding, base_url)
        all_links.extend(self._process_links(links))
    if self.link_extractor.unique:
        return unique_list(all_links)
    return all_links

----------

def test_restrict_xpaths_with_html_entities(self):
    html = b'<html><body><p><a href="/&hearts;/you?c=&euro;">text</a></p></body></html>'
    response = HtmlResponse('http://example.org/somepage/index.html', body=html, encoding='iso8859-15')
    links = self.extractor_cls(restrict_xpaths='//p').extract_links(response)
    self.assertEqual(links, [Link(url='http://example.org/%E2%99%A5/you?c=%A4', text='text')])

----------



Test Class Name: LinkExtractorTestCase