def pop(self, key, *args):
    return dict.pop(self, self.normkey(key), *args)

----------

def test_cache_without_limit(self):
    max = 10 ** 4
    cache = LocalWeakReferencedCache()
    refs = []
    for x in range(max):
        refs.append(Request(f'https://example.org/{x}'))
        cache[refs[-1]] = x
    self.assertEqual(len(cache), max)
    for (i, r) in enumerate(refs):
        self.assertIn(r, cache)
        self.assertEqual(cache[r], i)
    del r
    for _ in range(max // 2):
        refs.pop()
    garbage_collect()
    self.assertEqual(len(cache), max // 2)
    for (i, r) in enumerate(refs):
        self.assertIn(r, cache)
        self.assertEqual(cache[r], i)

----------



Test Class Name: LocalWeakReferencedCacheTest