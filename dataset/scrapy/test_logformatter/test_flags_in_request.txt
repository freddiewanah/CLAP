def crawled(self, request, response, spider):
    """Logs a message when the crawler finds a webpage."""
    request_flags = f' {str(request.flags)}' if request.flags else ''
    response_flags = f' {str(response.flags)}' if response.flags else ''
    return {'level': logging.DEBUG, 'msg': CRAWLEDMSG, 'args': {'status': response.status, 'request': request, 'request_flags': request_flags, 'referer': referer_str(request), 'response_flags': response_flags, 'flags': response_flags}}

----------

def test_flags_in_request(self):
    req = Request('http://www.example.com', flags=['test', 'flag'])
    res = Response('http://www.example.com')
    logkws = self.formatter.crawled(req, res, self.spider)
    logline = logkws['msg'] % logkws['args']
    self.assertEqual(logline, "Crawled (200) <GET http://www.example.com> (referer: None) ['test', 'flag']")

----------



Test Class Name: LogformatterSubclassTest