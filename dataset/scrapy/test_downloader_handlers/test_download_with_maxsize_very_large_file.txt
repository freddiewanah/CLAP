def download_request(self, request, spider):
    """Return a deferred for the HTTP download"""
    agent = ScrapyAgent(contextFactory=self._contextFactory, pool=self._pool, maxsize=getattr(spider, 'download_maxsize', self._default_maxsize), warnsize=getattr(spider, 'download_warnsize', self._default_warnsize), fail_on_dataloss=self._fail_on_dataloss, crawler=self._crawler)
    return agent.download_request(request)

----------

@defer.inlineCallbacks
def test_download_with_maxsize_very_large_file(self):
    with mock.patch('scrapy.core.downloader.handlers.http11.logger') as logger:
        request = Request(self.getURL('largechunkedfile'))

        def check(logger):
            logger.warning.assert_called_once_with(mock.ANY, mock.ANY)
        d = self.download_request(request, Spider('foo', download_maxsize=1500))
        yield self.assertFailure(d, defer.CancelledError, error.ConnectionAborted)
        d = defer.Deferred()
        d.addCallback(check)
        reactor.callLater(0.1, d.callback, logger)
        yield d

----------



Test Class Name: Http11TestCase