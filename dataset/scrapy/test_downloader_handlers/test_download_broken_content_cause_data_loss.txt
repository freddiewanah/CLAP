def download_request(self, request, spider):
    """Return a deferred for the HTTP download"""
    agent = ScrapyAgent(contextFactory=self._contextFactory, pool=self._pool, maxsize=getattr(spider, 'download_maxsize', self._default_maxsize), warnsize=getattr(spider, 'download_warnsize', self._default_warnsize), fail_on_dataloss=self._fail_on_dataloss, crawler=self._crawler)
    return agent.download_request(request)

----------

def test_download_broken_content_cause_data_loss(self, url='broken'):
    request = Request(self.getURL(url))
    d = self.download_request(request, Spider('foo'))

    def checkDataLoss(failure):
        if failure.check(ResponseFailed):
            if any((r.check(_DataLoss) for r in failure.value.reasons)):
                return None
        return failure
    d.addCallback(lambda _: self.fail('No DataLoss exception'))
    d.addErrback(checkDataLoss)
    return d

----------



Test Class Name: Http11TestCase