def download_request(self, request, spider):
    """Return a deferred for the HTTP download"""
    agent = ScrapyAgent(contextFactory=self._contextFactory, pool=self._pool, maxsize=getattr(spider, 'download_maxsize', self._default_maxsize), warnsize=getattr(spider, 'download_warnsize', self._default_warnsize), fail_on_dataloss=self._fail_on_dataloss, crawler=self._crawler)
    return agent.download_request(request)

----------

def test_invalid_credentials(self):
    if self.reactor_pytest == 'asyncio' and sys.platform == 'win32':
        raise unittest.SkipTest('This test produces DirtyReactorAggregateError on Windows with asyncio')
    from twisted.protocols.ftp import ConnectionLost
    meta = dict(self.req_meta)
    meta.update({'ftp_password': 'invalid'})
    request = Request(url=f'ftp://127.0.0.1:{self.portNum}/file.txt', meta=meta)
    d = self.download_handler.download_request(request, None)

    def _test(r):
        self.assertEqual(r.type, ConnectionLost)
    return self._add_test_callbacks(d, errback=_test)

----------



Test Class Name: FTPTestCase