def from_content_type(self, content_type, content_encoding=None):
    """Return the most appropriate Response class from an HTTP Content-Type
        header """
    if content_encoding:
        return Response
    mimetype = to_unicode(content_type).split(';')[0].strip().lower()
    return self.from_mimetype(mimetype)

----------

def test_from_content_type(self):
    mappings = [('text/html; charset=UTF-8', HtmlResponse), ('text/xml; charset=UTF-8', XmlResponse), ('application/xhtml+xml; charset=UTF-8', HtmlResponse), ('application/vnd.wap.xhtml+xml; charset=utf-8', HtmlResponse), ('application/xml; charset=UTF-8', XmlResponse), ('application/octet-stream', Response), ('application/x-json; encoding=UTF8;charset=UTF-8', TextResponse), ('application/json-amazonui-streaming;charset=UTF-8', TextResponse)]
    for (source, cls) in mappings:
        retcls = responsetypes.from_content_type(source)
        assert retcls is cls, f'{source} ==> {retcls} != {cls}'

----------



Test Class Name: ResponseTypesTest