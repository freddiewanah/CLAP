def from_content_disposition(self, content_disposition):
    try:
        filename = to_unicode(content_disposition, encoding='latin-1', errors='replace').split(';')[1].split('=')[1].strip('"\'')
        return self.from_filename(filename)
    except IndexError:
        return Response

----------

def test_from_content_disposition(self):
    mappings = [(b'attachment; filename="data.xml"', XmlResponse), (b'attachment; filename=data.xml', XmlResponse), ('attachment;filename=data£.tar.gz'.encode('utf-8'), Response), ('attachment;filename=dataµ.tar.gz'.encode('latin-1'), Response), ('attachment;filename=data高.doc'.encode('gbk'), Response), ('attachment;filename=دورهdata.html'.encode('cp720'), HtmlResponse), ('attachment;filename=日本語版Wikipedia.xml'.encode('iso2022_jp'), XmlResponse)]
    for (source, cls) in mappings:
        retcls = responsetypes.from_content_disposition(source)
        assert retcls is cls, f'{source} ==> {retcls} != {cls}'

----------



Test Class Name: ResponseTypesTest