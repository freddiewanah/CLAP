def from_headers(self, headers):
    """Return the most appropriate Response class by looking at the HTTP
        headers"""
    cls = Response
    if b'Content-Type' in headers:
        cls = self.from_content_type(content_type=headers[b'Content-Type'], content_encoding=headers.get(b'Content-Encoding'))
    if cls is Response and b'Content-Disposition' in headers:
        cls = self.from_content_disposition(headers[b'Content-Disposition'])
    return cls

----------

def test_from_headers(self):
    mappings = [({'Content-Type': ['text/html; charset=utf-8']}, HtmlResponse), ({'Content-Type': ['text/html; charset=utf-8'], 'Content-Encoding': ['gzip']}, Response), ({'Content-Type': ['application/octet-stream'], 'Content-Disposition': ['attachment; filename=data.txt']}, TextResponse)]
    for (source, cls) in mappings:
        source = Headers(source)
        retcls = responsetypes.from_headers(source)
        assert retcls is cls, f'{source} ==> {retcls} != {cls}'

----------



Test Class Name: ResponseTypesTest