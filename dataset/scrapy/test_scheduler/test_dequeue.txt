@abstractmethod
def next_request(self) -> Optional[Request]:
    """
        Return the next :class:`~scrapy.http.Request` to be processed, or ``None``
        to indicate that there are no requests to be considered ready at the moment.

        Returning ``None`` implies that no request from the scheduler will be sent
        to the downloader in the current reactor cycle. The engine will continue
        calling ``next_request`` until ``has_pending_requests`` is ``False``.
        """
    raise NotImplementedError()

----------

def test_dequeue(self):
    for url in _URLS:
        self.scheduler.enqueue_request(Request(url))
    self.close_scheduler()
    self.create_scheduler()
    urls = set()
    while self.scheduler.has_pending_requests():
        urls.add(self.scheduler.next_request().url)
    self.assertEqual(urls, _URLS)

----------



Test Class Name: BaseSchedulerOnDiskTester