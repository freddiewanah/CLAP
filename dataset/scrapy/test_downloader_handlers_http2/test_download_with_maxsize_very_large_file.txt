def download_request(self, request: Request, spider: Spider) -> Deferred:
    agent = ScrapyH2Agent(context_factory=self._context_factory, pool=self._pool, crawler=self._crawler)
    return agent.download_request(request, spider)

----------

@defer.inlineCallbacks
def test_download_with_maxsize_very_large_file(self):
    with mock.patch('scrapy.core.http2.stream.logger') as logger:
        request = Request(self.getURL('largechunkedfile'))

        def check(logger):
            logger.error.assert_called_once_with(mock.ANY)
        d = self.download_request(request, Spider('foo', download_maxsize=1500))
        yield self.assertFailure(d, defer.CancelledError, error.ConnectionAborted)
        d = defer.Deferred()
        d.addCallback(check)
        reactor.callLater(0.1, d.callback, logger)
        yield d

----------



Test Class Name: Https2TestCase