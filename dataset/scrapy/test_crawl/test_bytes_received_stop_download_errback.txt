def get(self, key, def_val=None):
    try:
        return super().get(key, def_val)[-1]
    except IndexError:
        return None

----------

@defer.inlineCallbacks
def test_bytes_received_stop_download_errback(self):
    crawler = get_crawler(BytesReceivedErrbackSpider)
    yield crawler.crawl(mockserver=self.mockserver)
    self.assertIsNone(crawler.spider.meta.get('response'))
    self.assertIsInstance(crawler.spider.meta['failure'], Failure)
    self.assertIsInstance(crawler.spider.meta['failure'].value, StopDownload)
    self.assertIsInstance(crawler.spider.meta['failure'].value.response, Response)
    self.assertEqual(crawler.spider.meta['failure'].value.response.body, crawler.spider.meta.get('bytes_received'))
    self.assertLess(len(crawler.spider.meta['failure'].value.response.body), crawler.spider.full_response_length)

----------



Test Class Name: CrawlSpiderTestCase