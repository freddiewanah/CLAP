def do_request(server, content):
    request = FakeRequest(content + ' HTTP/1.1')
    server.RequestHandlerClass(request, ('127.0.0.1', 0), server)
    response = request.out_file.getvalue()
    (headers, _, content) = response.partition(b'\r\n\r\n')
    (status, _, headers) = headers.partition(b'\r\n')
    status = status.split(None, 1)[1].decode()
    headers = email.message_from_bytes(headers)
    headers['_status'] = status
    return (headers, content.decode())

----------

@tempdir({'я.html': '<body>aaa</body>', '测试2/index.html': '<body>bbb</body>'})
def test_serves_with_unicode_characters(self, site_dir):
    with testing_server(site_dir) as server:
        (_, output) = do_request(server, 'GET /я.html')
        self.assertRegex(output, '^<body>aaa</body>$')
        (_, output) = do_request(server, 'GET /%D1%8F.html')
        self.assertRegex(output, '^<body>aaa</body>$')
        with self.assertLogs('mkdocs.livereload'):
            (headers, _) = do_request(server, 'GET /%D1.html')
        self.assertEqual(headers['_status'], '404 Not Found')
        (_, output) = do_request(server, 'GET /测试2/')
        self.assertRegex(output, '^<body>bbb</body>$')
        (_, output) = do_request(server, 'GET /%E6%B5%8B%E8%AF%952/index.html')
        self.assertRegex(output, '^<body>bbb</body>$')

----------



Test Class Name: BuildTests