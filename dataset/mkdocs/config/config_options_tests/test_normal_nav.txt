def yaml_load(source: IO, loader: Optional[Type[yaml.Loader]]=None) -> Optional[Dict[str, Any]]:
    """Return dict of source YAML file using loader, recursively deep merging inherited parent."""
    Loader = loader or get_yaml_loader()
    result = yaml.load(source, Loader=Loader)
    if result is not None and 'INHERIT' in result:
        relpath = result.pop('INHERIT')
        abspath = os.path.normpath(os.path.join(os.path.dirname(source.name), relpath))
        if not os.path.exists(abspath):
            raise exceptions.ConfigurationError(f"Inherited config file '{relpath}' does not exist at '{abspath}'.")
        log.debug(f'Loading inherited configuration file: {abspath}')
        with open(abspath, 'rb') as fd:
            parent = yaml_load(fd, Loader)
        result = merge(parent, result)
    return result

----------

def test_normal_nav(self) -> None:
    nav_yaml = textwrap.dedent('            - Home: index.md\n            - getting-started.md\n            - User Guide:\n                - Overview: user-guide/index.md\n                - Installation: user-guide/installation.md\n            ')
    nav = yaml_load(io.StringIO(nav_yaml))
    conf = self.get_config(self.Schema, {'option': nav})
    self.assertEqual(conf.option, nav)

----------



Test Class Name: default