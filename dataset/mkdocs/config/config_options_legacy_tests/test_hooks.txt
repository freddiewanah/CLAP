def write_file(content: bytes, output_path: str) -> None:
    """
    Write content to output_path, making sure any parent directories exist.
    """
    output_dir = os.path.dirname(output_path)
    os.makedirs(output_dir, exist_ok=True)
    with open(output_path, 'wb') as f:
        f.write(content)

----------

@tempdir()
def test_hooks(self, src_dir):
    write_file(b'def on_page_markdown(markdown, **kwargs): return markdown.replace("f", "z")', os.path.join(src_dir, 'hooks', 'my_hook.py'))
    write_file(b'foo foo', os.path.join(src_dir, 'docs', 'index.md'))
    conf = self.get_config(self.Schema, {'hooks': ['hooks/my_hook.py']}, config_file_path=os.path.join(src_dir, 'mkdocs.yml'))
    self.assertIn('hooks/my_hook.py', conf['plugins'])
    hook = conf['plugins']['hooks/my_hook.py']
    self.assertTrue(hasattr(hook, 'on_page_markdown'))
    self.assertEqual({**conf['plugins'].events, 'page_markdown': [hook.on_page_markdown]}, conf['plugins'].events)
    self.assertEqual(hook.on_page_markdown('foo foo'), 'zoo zoo')
    self.assertFalse(hasattr(hook, 'on_nav'))

----------



Test Class Name: default