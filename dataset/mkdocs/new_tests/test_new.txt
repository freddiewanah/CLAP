def new(output_dir: str) -> None:
    docs_dir = os.path.join(output_dir, 'docs')
    config_path = os.path.join(output_dir, 'mkdocs.yml')
    index_path = os.path.join(docs_dir, 'index.md')
    if os.path.exists(config_path):
        log.info('Project already exists.')
        return
    if not os.path.exists(output_dir):
        log.info(f'Creating project directory: {output_dir}')
        os.mkdir(output_dir)
    log.info(f'Writing config file: {config_path}')
    with open(config_path, 'w', encoding='utf-8') as f:
        f.write(config_text)
    if os.path.exists(index_path):
        return
    log.info(f'Writing initial docs: {index_path}')
    if not os.path.exists(docs_dir):
        os.mkdir(docs_dir)
    with open(index_path, 'w', encoding='utf-8') as f:
        f.write(index_text)

----------

@tempdir()
def test_new(self, temp_dir):
    with change_dir(temp_dir):
        new.new('myproject')
        expected_paths = [os.path.join(temp_dir, 'myproject'), os.path.join(temp_dir, 'myproject', 'mkdocs.yml'), os.path.join(temp_dir, 'myproject', 'docs'), os.path.join(temp_dir, 'myproject', 'docs', 'index.md')]
        for expected_path in expected_paths:
            self.assertTrue(os.path.exists(expected_path))

----------



Test Class Name: NewTests