def read_source(self, config: MkDocsConfig) -> None:
    source = config['plugins'].run_event('page_read_source', page=self, config=config)
    if source is None:
        try:
            with open(self.file.abs_src_path, encoding='utf-8-sig', errors='strict') as f:
                source = f.read()
        except OSError:
            log.error(f'File not found: {self.file.src_path}')
            raise
        except ValueError:
            log.error(f'Encoding error reading file: {self.file.src_path}')
            raise
    (self.markdown, self.meta) = meta.get_data(source)
    self._set_title()

----------

@tempdir()
def test_BOM(self, docs_dir):
    md_src = '# An UTF-8 encoded file with a BOM'
    cfg = load_config(docs_dir=docs_dir)
    fl = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])
    pg = Page(None, fl, cfg)
    with open(fl.abs_src_path, 'w', encoding='utf-8-sig') as f:
        f.write(md_src)
    pg.read_source(cfg)
    self.assertNotIn('\ufeff', pg.markdown)
    self.assertEqual(pg.markdown, md_src)
    self.assertEqual(pg.meta, {})

----------



Test Class Name: PageTests