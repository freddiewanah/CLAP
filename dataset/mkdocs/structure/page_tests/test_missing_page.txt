def read_source(self, config: MkDocsConfig) -> None:
    source = config['plugins'].run_event('page_read_source', page=self, config=config)
    if source is None:
        try:
            with open(self.file.abs_src_path, encoding='utf-8-sig', errors='strict') as f:
                source = f.read()
        except OSError:
            log.error(f'File not found: {self.file.src_path}')
            raise
        except ValueError:
            log.error(f'Encoding error reading file: {self.file.src_path}')
            raise
    (self.markdown, self.meta) = meta.get_data(source)
    self._set_title()

----------

def test_missing_page(self):
    cfg = load_config()
    fl = File('missing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])
    pg = Page('Foo', fl, cfg)
    with self.assertLogs('mkdocs') as cm:
        with self.assertRaises(OSError):
            pg.read_source(cfg)
    self.assertEqual('\n'.join(cm.output), 'ERROR:mkdocs.structure.pages:File not found: missing.md')

----------



Test Class Name: PageTests