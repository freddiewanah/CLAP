def get_markdown_toc(markdown_source):
    """Return TOC generated by Markdown parser from Markdown source text."""
    md = markdown.Markdown(extensions=['toc'])
    md.convert(markdown_source)
    return md.toc_tokens

----------

def test_nested_anchor(self):
    md = dedent('\n            # Heading 1\n            ## Heading 2\n            # Heading 3\n            ### Heading 4\n            ### <a href="/">Heading 5</a>\n            ')
    expected = dedent('\n            Heading 1 - #heading-1\n                Heading 2 - #heading-2\n            Heading 3 - #heading-3\n                Heading 4 - #heading-4\n                Heading 5 - #heading-5\n            ')
    toc = get_toc(get_markdown_toc(md))
    self.assertEqual(str(toc).strip(), expected)
    self.assertEqual(len(toc), 2)

----------



Test Class Name: TableOfContentsTests