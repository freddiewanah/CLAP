def get_markdown_toc(markdown_source):
    """Return TOC generated by Markdown parser from Markdown source text."""
    md = markdown.Markdown(extensions=['toc'])
    md.convert(markdown_source)
    return md.toc_tokens

----------

def test_find_toc_by_id(self):
    """
        Test finding the relevant TOC item by the tag ID.
        """
    index = search_index.SearchIndex()
    md = dedent('\n            # Heading 1\n            ## Heading 2\n            ### Heading 3\n            ')
    toc = get_toc(get_markdown_toc(md))
    toc_item = index._find_toc_by_id(toc, 'heading-1')
    self.assertEqual(toc_item.url, '#heading-1')
    self.assertEqual(toc_item.title, 'Heading 1')
    toc_item2 = index._find_toc_by_id(toc, 'heading-2')
    self.assertEqual(toc_item2.url, '#heading-2')
    self.assertEqual(toc_item2.title, 'Heading 2')
    toc_item3 = index._find_toc_by_id(toc, 'heading-3')
    self.assertEqual(toc_item3.url, '#heading-3')
    self.assertEqual(toc_item3.title, 'Heading 3')

----------



Test Class Name: SearchIndexTests