def run(self) -> None:
    """Start json minimizer and exit when all json files were minimized."""
    for file in self.files:
        self.minify(file)
    after = human_repr(self.after_total)
    before = human_repr(self.before_total)
    saved = human_repr(self.before_total - self.after_total)
    info = f'\nTotal: {Fore.LIGHTGREEN_EX}{before}{Style.RESET_ALL} -> {Fore.LIGHTGREEN_EX}{after}{Style.RESET_ALL}. Compressed: {Fore.LIGHTGREEN_EX}{saved}{Style.RESET_ALL}\n'
    print(info)

----------

@pytest.mark.skipif(sys.platform.startswith('win'), reason='windows')
@pytest.mark.usefixtures(disable_colorama_codes.__name__)
def test_minimizer_reports_to_stdout(capsys, tmp_path):
    file = tmp_path / 'spam.json'
    file.write_text('{\n}')
    minifier = Minimizer(files=(file,))
    minifier.run()
    lines = capsys.readouterr().out.split('\n')
    assert lines[0].strip().endswith('3.0B    -> 2.0B')
    assert lines[2] == 'Total: 3.0B -> 2.0B. Compressed: 1.0B'

----------



Test Class Name: default