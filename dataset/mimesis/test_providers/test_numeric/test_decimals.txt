def decimals(self, start: float=0.0, end: float=1000.0, n: int=10) -> t.List[Decimal]:
    """Generate a decimal number as :py:class:`decimal.Decimal` objects.

        :param start: Start range.
        :param end: End range.
        :param n: Length of the list.
        :return: A list of random decimal numbers.
        """
    return [self.decimal_number(start, end) for _ in range(n)]

----------

@pytest.mark.parametrize('start, end', [(1, 10), (10, 20), (20, 30)])
def test_decimals(self, numeric, start, end):
    result = numeric.decimals(start=start, end=end)
    assert max(result) <= end
    assert min(result) >= start
    assert isinstance(result, list)
    element = numeric.random.choice(result)
    assert isinstance(element, decimal.Decimal)

----------



Test Class Name: TestNumbers