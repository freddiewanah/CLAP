def luhn_checksum(num: str) -> str:
    """Calculate a checksum for num using the Luhn algorithm.

    :param num: The number to calculate a checksum for as a string.
    :return: Checksum for number.
    """
    check = 0
    for (i, s) in enumerate(reversed(num)):
        sx = int(s)
        if i % 2 == 0:
            sx *= 2
        if sx > 9:
            sx -= 9
        check += sx
    return str(check * 9 % 10)

----------

@pytest.mark.parametrize('number, check_sum', [('5563455651', '2'), ('7992739871', '3'), ('5161675549', '5')])
def test_luhn_checksum(number, check_sum):
    assert shortcuts.luhn_checksum(number) == check_sum

----------



Test Class Name: default