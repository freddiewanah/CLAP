def kpp(self) -> str:
    """Generate random ``KPP``.

        :return: 'KPP'.

        :Example:
            560058652.
        """
    tax_codes = ['7700', '7800', '5000', '0100', '0200', '0300', '0500', '0600', '0700', '0800', '0900', '1000', '1100', '1200', '1300', '1400', '1500', '1600', '1700', '1800', '1900', '2000', '2100', '2200', '2300', '2400', '2500', '2600', '2700', '2800', '2900', '3000', '3100', '3200', '3300', '3400', '3500', '3600', '3700', '3800', '3900', '4000', '4100', '4900', '5100', '5200', '5300', '5400', '5500', '5600', '5700', '5800', '5900', '6000', '6100', '6200', '6300', '6400', '6500', '6600', '6700', '6800', '6900', '7000', '7100', '7200', '7300', '7400', '7500', '7600', '7900', '8600', '8700', '8900', '9100', '9200', '9800', '9900', '9901', '9951', '9952', '9953', '9954', '9955', '9956', '9957', '9958', '9959', '9961', '9962', '9965', '9966', '9971', '9972', '9973', '9974', '9975', '9976', '9977', '9979', '9998']
    tax_code = tax_codes[self.random.randint(0, len(tax_codes) - 1)]
    reg_code = f'{self.random.randint(1, 99):02}'
    reg_number = f'{self.random.randint(1, 999):03}'
    kpp = tax_code + reg_code + reg_number
    return kpp

----------

def test_kpp(russia):
    result = russia.kpp()
    assert len(result) == 9

----------



Test Class Name: default