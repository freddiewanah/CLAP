def json_decode(value: Union[str, bytes]) -> Any:
    """Returns Python objects for the given JSON string.

    Supports both `str` and `bytes` inputs.
    """
    return json.loads(to_basestring(value))

----------

def test_chunked_request_uppercase(self):
    self.stream.write(b'POST /echo HTTP/1.1\nTransfer-Encoding: Chunked\nContent-Type: application/x-www-form-urlencoded\n\n4\nfoo=\n3\nbar\n0\n\n'.replace(b'\n', b'\r\n'))
    (start_line, headers, response) = self.io_loop.run_sync(lambda : read_stream_body(self.stream))
    self.assertEqual(json_decode(response), {'foo': ['bar']})

----------



Test Class Name: HTTPServerRawTest