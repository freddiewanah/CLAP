def get_http_port(self) -> int:
    """Returns the port used by the server.

        A new port is chosen for each test.
        """
    return self.__port

----------

@gen_test
def test_body_size_override_reset(self):
    stream = IOStream(socket.socket())
    try:
        yield stream.connect(('127.0.0.1', self.get_http_port()))
        stream.write(b'PUT /streaming?expected_size=10240 HTTP/1.1\r\nContent-Length: 10240\r\n\r\n')
        stream.write(b'a' * 10240)
        (start_line, headers, response) = (yield read_stream_body(stream))
        self.assertEqual(response, b'10240')
        stream.write(b'PUT /streaming HTTP/1.1\r\nContent-Length: 10240\r\n\r\n')
        with ExpectLog(gen_log, '.*Content-Length too long', level=logging.INFO):
            data = (yield stream.read_until_close())
        self.assertEqual(data, b'HTTP/1.1 400 Bad Request\r\n\r\n')
    finally:
        stream.close()

----------



Test Class Name: StreamingHandler