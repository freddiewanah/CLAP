def utf8(value: Union[None, str, bytes]) -> Optional[bytes]:
    """Converts a string argument to a byte string.

    If the argument is already a byte string or None, it is returned unchanged.
    Otherwise it must be a unicode string and is encoded as utf8.
    """
    if isinstance(value, _UTF8_TYPES):
        return value
    if not isinstance(value, unicode_type):
        raise TypeError('Expected bytes, unicode, or None; got %r' % type(value))
    return value.encode('utf-8')

----------

def test_url_escape_quote_plus(self):
    unescaped = '+ #%'
    plus_escaped = '%2B+%23%25'
    escaped = '%2B%20%23%25'
    self.assertEqual(url_escape(unescaped), plus_escaped)
    self.assertEqual(url_escape(unescaped, plus=False), escaped)
    self.assertEqual(url_unescape(plus_escaped), unescaped)
    self.assertEqual(url_unescape(escaped, plus=False), unescaped)
    self.assertEqual(url_unescape(plus_escaped, encoding=None), utf8(unescaped))
    self.assertEqual(url_unescape(escaped, encoding=None, plus=False), utf8(unescaped))

----------



Test Class Name: EscapeTestCase