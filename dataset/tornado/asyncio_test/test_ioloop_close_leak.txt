def close(self, all_fds: bool=False) -> None:
    if self.is_current:
        self._clear_current()
    super().close(all_fds=all_fds)

----------

def test_ioloop_close_leak(self):
    orig_count = len(IOLoop._ioloop_for_asyncio)
    for i in range(10):
        with warnings.catch_warnings():
            warnings.simplefilter('ignore', DeprecationWarning)
            loop = AsyncIOLoop()
            loop.close()
    new_count = len(IOLoop._ioloop_for_asyncio) - orig_count
    self.assertEqual(new_count, 0)

----------



Test Class Name: LeakTest