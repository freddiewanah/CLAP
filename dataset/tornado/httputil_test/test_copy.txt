def get_all(self) -> Iterable[Tuple[str, str]]:
    """Returns an iterable of all (name, value) pairs.

        If a header has multiple values, multiple pairs will be
        returned with the same name.
        """
    for (name, values) in self._as_list.items():
        for value in values:
            yield (name, value)

----------

def test_copy(self):
    all_pairs = [('A', '1'), ('A', '2'), ('B', 'c')]
    h1 = HTTPHeaders()
    for (k, v) in all_pairs:
        h1.add(k, v)
    h2 = h1.copy()
    h3 = copy.copy(h1)
    h4 = copy.deepcopy(h1)
    for headers in [h1, h2, h3, h4]:
        self.assertEqual(list(sorted(headers.get_all())), all_pairs)
    for headers in [h2, h3, h4]:
        self.assertIsNot(headers, h1)
        self.assertIsNot(headers.get_list('A'), h1.get_list('A'))

----------



Test Class Name: HTTPHeadersTest