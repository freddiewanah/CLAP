def close(self) -> None:
    """Closes the `Resolver`, freeing any resources used.

        .. versionadded:: 3.1

        """
    pass

----------

@unittest.skipIf(not hasattr(socket, 'SO_REUSEPORT'), 'SO_REUSEPORT is not supported')
def test_reuse_port(self):
    sockets = []
    (socket, port) = bind_unused_port(reuse_port=True)
    try:
        sockets = bind_sockets(port, '127.0.0.1', reuse_port=True)
        self.assertTrue(all((s.getsockname()[1] == port for s in sockets)))
    finally:
        socket.close()
        for sock in sockets:
            sock.close()

----------



Test Class Name: TestPortAllocation