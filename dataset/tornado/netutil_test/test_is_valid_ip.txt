def is_valid_ip(ip: str) -> bool:
    """Returns ``True`` if the given string is a well-formed IP address.

    Supports IPv4 and IPv6.
    """
    if not ip or '\x00' in ip:
        return False
    try:
        res = socket.getaddrinfo(ip, 0, socket.AF_UNSPEC, socket.SOCK_STREAM, 0, socket.AI_NUMERICHOST)
        return bool(res)
    except socket.gaierror as e:
        if e.args[0] == socket.EAI_NONAME:
            return False
        raise
    except UnicodeError:
        return False
    return True

----------

def test_is_valid_ip(self):
    self.assertTrue(is_valid_ip('127.0.0.1'))
    self.assertTrue(is_valid_ip('4.4.4.4'))
    self.assertTrue(is_valid_ip('::1'))
    self.assertTrue(is_valid_ip('2620:0:1cfe:face:b00c::3'))
    self.assertTrue(not is_valid_ip('www.google.com'))
    self.assertTrue(not is_valid_ip('localhost'))
    self.assertTrue(not is_valid_ip('4.4.4.4<'))
    self.assertTrue(not is_valid_ip(' 127.0.0.1'))
    self.assertTrue(not is_valid_ip(''))
    self.assertTrue(not is_valid_ip(' '))
    self.assertTrue(not is_valid_ip('\n'))
    self.assertTrue(not is_valid_ip('\x00'))
    self.assertTrue(not is_valid_ip('a' * 100))

----------



Test Class Name: IsValidIPTest