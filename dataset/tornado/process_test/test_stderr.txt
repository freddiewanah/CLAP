def close(self) -> None:
    """Closes the HTTPClient, freeing any resources used."""
    if not self._closed:
        self._async_client.close()
        self._io_loop.close()
        self._closed = True

----------

@gen_test
def test_stderr(self):
    subproc = Subprocess([sys.executable, '-u', '-c', "import sys; sys.stderr.write('hello\\n')"], stderr=Subprocess.STREAM)
    self.addCleanup(lambda : self.term_and_wait(subproc))
    data = (yield subproc.stderr.read_until(b'\n'))
    self.assertEqual(data, b'hello\n')
    subproc.stderr.close()

----------



Test Class Name: SubprocessTest