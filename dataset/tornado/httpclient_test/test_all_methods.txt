def utf8(value: Union[None, str, bytes]) -> Optional[bytes]:
    """Converts a string argument to a byte string.

    If the argument is already a byte string or None, it is returned unchanged.
    Otherwise it must be a unicode string and is encoded as utf8.
    """
    if isinstance(value, _UTF8_TYPES):
        return value
    if not isinstance(value, unicode_type):
        raise TypeError('Expected bytes, unicode, or None; got %r' % type(value))
    return value.encode('utf-8')

----------

def test_all_methods(self):
    for method in ['GET', 'DELETE', 'OPTIONS']:
        response = self.fetch('/all_methods', method=method)
        self.assertEqual(response.body, utf8(method))
    for method in ['POST', 'PUT', 'PATCH']:
        response = self.fetch('/all_methods', method=method, body=b'')
        self.assertEqual(response.body, utf8(method))
    response = self.fetch('/all_methods', method='HEAD')
    self.assertEqual(response.body, b'')
    response = self.fetch('/all_methods', method='OTHER', allow_nonstandard_methods=True)
    self.assertEqual(response.body, b'OTHER')

----------



Test Class Name: HTTPClientCommonTestCase