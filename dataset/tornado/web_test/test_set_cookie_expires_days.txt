def get(self, *args: Any, **kwargs: Any) -> None:
    to_url = self._url.format(*args, **kwargs)
    if self.request.query_arguments:
        to_url = httputil.url_concat(to_url, list(httputil.qs_to_qsl(self.request.query_arguments)))
    self.redirect(to_url, permanent=self._permanent)

----------

def test_set_cookie_expires_days(self):
    response = self.fetch('/set_expires_days')
    header = response.headers.get('Set-Cookie')
    assert header is not None
    match = re.match('foo=bar; expires=(?P<expires>.+); Path=/', header)
    assert match is not None
    expires = datetime.datetime.utcnow() + datetime.timedelta(days=10)
    parsed = email.utils.parsedate(match.groupdict()['expires'])
    assert parsed is not None
    header_expires = datetime.datetime(*parsed[:6])
    self.assertTrue(abs((expires - header_expires).total_seconds()) < 10)

----------



Test Class Name: SetCookieFalsyFlags