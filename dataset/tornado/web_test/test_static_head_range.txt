def utf8(value: Union[None, str, bytes]) -> Optional[bytes]:
    """Converts a string argument to a byte string.

    If the argument is already a byte string or None, it is returned unchanged.
    Otherwise it must be a unicode string and is encoded as utf8.
    """
    if isinstance(value, _UTF8_TYPES):
        return value
    if not isinstance(value, unicode_type):
        raise TypeError('Expected bytes, unicode, or None; got %r' % type(value))
    return value.encode('utf-8')

----------

def test_static_head_range(self):
    response = self.fetch('/static/robots.txt', method='HEAD', headers={'Range': 'bytes=1-4'})
    self.assertEqual(response.code, 206)
    self.assertEqual(response.body, b'')
    self.assertEqual(response.headers['Content-Length'], '4')
    self.assertEqual(utf8(response.headers['Etag']), b'"' + self.robots_txt_hash + b'"')

----------



Test Class Name: OverrideStaticUrlHandler