def cookie_headers(self, token=None):
    if token is None:
        token = self.xsrf_token
    return {'Cookie': '_xsrf=' + token}

----------

def test_cross_user(self):
    token2 = self.get_token()
    for token in (self.xsrf_token, token2):
        response = self.fetch('/', method='POST', body=urllib.parse.urlencode(dict(_xsrf=token)), headers=self.cookie_headers(token))
        self.assertEqual(response.code, 200)
    for (cookie_token, body_token) in ((self.xsrf_token, token2), (token2, self.xsrf_token)):
        with ExpectLog(gen_log, '.*XSRF cookie does not match POST'):
            response = self.fetch('/', method='POST', body=urllib.parse.urlencode(dict(_xsrf=body_token)), headers=self.cookie_headers(cookie_token))
        self.assertEqual(response.code, 403)

----------



Test Class Name: Handler