@staticmethod
def exists(path):
    return PathManager.exists(index_file_path(path)) and PathManager.exists(data_file_path(path))

----------

def test_fsdp_sharded_checkpoint_generate(self):
    with contextlib.redirect_stdout(StringIO()):
        with tempfile.TemporaryDirectory('test_fsdp_sharded') as data_dir:
            log = os.path.join(data_dir, 'train.log')
            create_dummy_data(data_dir)
            preprocess_translation_data(data_dir)
            world_size = min(torch.cuda.device_count(), 2)
            train_translation_model(data_dir, 'fconv_iwslt_de_en', ['--log-file', log, '--ddp-backend', 'fully_sharded', '--use-sharded-state'], world_size=world_size)
            generate_main(data_dir, ['--checkpoint-shard-count', str(world_size)])
            assert os.path.exists(log)

----------



Test Class Name: TestTranslationGPU