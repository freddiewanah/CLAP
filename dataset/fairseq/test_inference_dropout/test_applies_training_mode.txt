@classmethod
def build_model(cls, args, task):
    """Build a new model instance."""
    base_architecture(args)
    if args.encoder_layers_to_keep:
        args.encoder_layers = len(args.encoder_layers_to_keep.split(','))
    if args.decoder_layers_to_keep:
        args.decoder_layers = len(args.decoder_layers_to_keep.split(','))
    if getattr(args, 'max_source_positions', None) is None:
        args.max_source_positions = DEFAULT_MAX_SOURCE_POSITIONS
    if getattr(args, 'max_target_positions', None) is None:
        args.max_target_positions = DEFAULT_MAX_TARGET_POSITIONS
    (src_dict, tgt_dict) = (task.source_dictionary, task.target_dictionary)
    if args.share_all_embeddings:
        if src_dict != tgt_dict:
            raise ValueError('--share-all-embeddings requires a joined dictionary')
        if args.encoder_embed_dim != args.decoder_embed_dim:
            raise ValueError('--share-all-embeddings requires --encoder-embed-dim to match --decoder-embed-dim')
        if args.decoder_embed_path and args.decoder_embed_path != args.encoder_embed_path:
            raise ValueError('--share-all-embeddings not compatible with --decoder-embed-path')
        args.share_decoder_input_output_embed = True
    if getattr(args, 'offload_activations', False):
        args.checkpoint_activations = True
    if not args.share_all_embeddings:
        args.min_params_to_wrap = getattr(args, 'min_params_to_wrap', DEFAULT_MIN_PARAMS_TO_WRAP)
    cfg = TransformerConfig.from_namespace(args)
    return super().build_model(cfg, task)

----------

def test_applies_training_mode(self):
    self.transformer_model = TransformerModel.build_model(self.args, self.task)
    assert self.transformer_model.encoder.dropout_module.training
    for layer in self.transformer_model.encoder.layers:
        assert layer.dropout_module.training
    self.transformer_model.eval()
    assert not self.transformer_model.decoder.dropout_module.training
    for layer in self.transformer_model.encoder.layers:
        assert not layer.dropout_module.training

----------



Test Class Name: TestInferenceDropout