def encode_data_uri(data, mime_type):
    return 'data:%s;base64,%s' % (mime_type, base64.b64encode(data).decode('ascii'))

----------

def test_download_json(self):
    uri = encode_data_uri(b'{"foo": "blah"}', 'application/json')
    self.assertEqual(self.ie._download_json(uri, None), {'foo': 'blah'})
    uri = encode_data_uri(b'callback({"foo": "blah"})', 'application/javascript')
    self.assertEqual(self.ie._download_json(uri, None, transform_source=strip_jsonp), {'foo': 'blah'})
    uri = encode_data_uri(b'{"foo": invalid}', 'application/json')
    self.assertRaises(ExtractorError, self.ie._download_json, uri, None)
    self.assertEqual(self.ie._download_json(uri, None, fatal=False), None)

----------



Test Class Name: TestInfoExtractor