def cli_bool_option(params, command_option, param, true_value='true', false_value='false', separator=None):
    param = params.get(param)
    if param is None:
        return []
    assert isinstance(param, bool)
    if separator:
        return [command_option + separator + (true_value if param else false_value)]
    return [command_option, true_value if param else false_value]

----------

def test_cli_bool_option(self):
    self.assertEqual(cli_bool_option({'nocheckcertificate': True}, '--no-check-certificate', 'nocheckcertificate'), ['--no-check-certificate', 'true'])
    self.assertEqual(cli_bool_option({'nocheckcertificate': True}, '--no-check-certificate', 'nocheckcertificate', separator='='), ['--no-check-certificate=true'])
    self.assertEqual(cli_bool_option({'nocheckcertificate': True}, '--check-certificate', 'nocheckcertificate', 'false', 'true'), ['--check-certificate', 'false'])
    self.assertEqual(cli_bool_option({'nocheckcertificate': True}, '--check-certificate', 'nocheckcertificate', 'false', 'true', '='), ['--check-certificate=false'])
    self.assertEqual(cli_bool_option({'nocheckcertificate': False}, '--check-certificate', 'nocheckcertificate', 'false', 'true'), ['--check-certificate', 'true'])
    self.assertEqual(cli_bool_option({'nocheckcertificate': False}, '--check-certificate', 'nocheckcertificate', 'false', 'true', '='), ['--check-certificate=true'])
    self.assertEqual(cli_bool_option({}, '--check-certificate', 'nocheckcertificate', 'false', 'true', '='), [])

----------



Test Class Name: TestUtil