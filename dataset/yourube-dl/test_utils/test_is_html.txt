def is_html(first_bytes):
    """ Detect whether a file contains HTML by examining its first bytes. """
    BOMS = [(b'\xef\xbb\xbf', 'utf-8'), (b'\x00\x00\xfe\xff', 'utf-32-be'), (b'\xff\xfe\x00\x00', 'utf-32-le'), (b'\xff\xfe', 'utf-16-le'), (b'\xfe\xff', 'utf-16-be')]
    for (bom, enc) in BOMS:
        if first_bytes.startswith(bom):
            s = first_bytes[len(bom):].decode(enc, 'replace')
            break
    else:
        s = first_bytes.decode('utf-8', 'replace')
    return re.match('^\\s*<', s)

----------

def test_is_html(self):
    self.assertFalse(is_html(b'IDC<html'))
    self.assertTrue(is_html(b'<!DOCTYPE foo>\xaaa'))
    self.assertTrue(is_html(b'\xef\xbb\xbf<!DOCTYPE foo>\xaaa'))
    self.assertTrue(is_html(b'\xff\xfe<\x00h\x00t\x00m\x00l\x00>\x00\xe4\x00'))
    self.assertTrue(is_html(b'\xfe\xff\x00<\x00h\x00t\x00m\x00l\x00>\x00\xe4'))
    self.assertTrue(is_html(b'\x00\x00\xfe\xff\x00\x00\x00<\x00\x00\x00h\x00\x00\x00t\x00\x00\x00m\x00\x00\x00l\x00\x00\x00>\x00\x00\x00\xe4'))
    self.assertTrue(is_html(b'\xff\xfe\x00\x00<\x00\x00\x00h\x00\x00\x00t\x00\x00\x00m\x00\x00\x00l\x00\x00\x00>\x00\x00\x00\xe4\x00\x00\x00'))

----------



Test Class Name: TestUtil