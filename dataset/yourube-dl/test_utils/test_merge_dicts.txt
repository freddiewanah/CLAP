def merge_dicts(*dicts):
    merged = {}
    for a_dict in dicts:
        for (k, v) in a_dict.items():
            if v is None:
                continue
            if k not in merged or (isinstance(v, compat_str) and v and isinstance(merged[k], compat_str) and (not merged[k])):
                merged[k] = v
    return merged

----------

def test_merge_dicts(self):
    self.assertEqual(merge_dicts({'a': 1}, {'b': 2}), {'a': 1, 'b': 2})
    self.assertEqual(merge_dicts({'a': 1}, {'a': 2}), {'a': 1})
    self.assertEqual(merge_dicts({'a': 1}, {'a': None}), {'a': 1})
    self.assertEqual(merge_dicts({'a': 1}, {'a': ''}), {'a': 1})
    self.assertEqual(merge_dicts({'a': 1}, {}), {'a': 1})
    self.assertEqual(merge_dicts({'a': None}, {'a': 1}), {'a': 1})
    self.assertEqual(merge_dicts({'a': ''}, {'a': 1}), {'a': ''})
    self.assertEqual(merge_dicts({'a': ''}, {'a': 'abc'}), {'a': 'abc'})
    self.assertEqual(merge_dicts({'a': None}, {'a': ''}, {'a': 'abc'}), {'a': 'abc'})

----------



Test Class Name: TestUtil