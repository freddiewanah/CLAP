def find_xpath_attr(node, xpath, key, val=None):
    for f in node.findall(compat_xpath(xpath)):
        if key not in f.attrib:
            continue
        if val is None or f.attrib.get(key) == val:
            return f
    return None

----------

def test_find_xpath_attr(self):
    testxml = '<root>\n            <node/>\n            <node x="a"/>\n            <node x="a" y="c" />\n            <node x="b" y="d" />\n            <node x="" />\n        </root>'
    doc = compat_etree_fromstring(testxml)
    self.assertEqual(find_xpath_attr(doc, './/fourohfour', 'n'), None)
    self.assertEqual(find_xpath_attr(doc, './/fourohfour', 'n', 'v'), None)
    self.assertEqual(find_xpath_attr(doc, './/node', 'n'), None)
    self.assertEqual(find_xpath_attr(doc, './/node', 'n', 'v'), None)
    self.assertEqual(find_xpath_attr(doc, './/node', 'x'), doc[1])
    self.assertEqual(find_xpath_attr(doc, './/node', 'x', 'a'), doc[1])
    self.assertEqual(find_xpath_attr(doc, './/node', 'x', 'b'), doc[3])
    self.assertEqual(find_xpath_attr(doc, './/node', 'y'), doc[2])
    self.assertEqual(find_xpath_attr(doc, './/node', 'y', 'c'), doc[2])
    self.assertEqual(find_xpath_attr(doc, './/node', 'y', 'd'), doc[3])
    self.assertEqual(find_xpath_attr(doc, './/node', 'x', ''), doc[4])

----------



Test Class Name: TestUtil