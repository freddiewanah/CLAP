def xpath_attr(node, xpath, key, name=None, fatal=False, default=NO_DEFAULT):
    n = find_xpath_attr(node, xpath, key)
    if n is None:
        if default is not NO_DEFAULT:
            return default
        elif fatal:
            name = '%s[@%s]' % (xpath, key) if name is None else name
            raise ExtractorError('Could not find XML attribute %s' % name)
        else:
            return None
    return n.attrib[key]

----------

def test_xpath_attr(self):
    testxml = '<root>\n            <div>\n                <p x="a">Foo</p>\n            </div>\n        </root>'
    doc = compat_etree_fromstring(testxml)
    self.assertEqual(xpath_attr(doc, 'div/p', 'x'), 'a')
    self.assertEqual(xpath_attr(doc, 'div/bar', 'x'), None)
    self.assertEqual(xpath_attr(doc, 'div/p', 'y'), None)
    self.assertEqual(xpath_attr(doc, 'div/bar', 'x', default='default'), 'default')
    self.assertEqual(xpath_attr(doc, 'div/p', 'y', default='default'), 'default')
    self.assertRaises(ExtractorError, xpath_attr, doc, 'div/bar', 'x', fatal=True)
    self.assertRaises(ExtractorError, xpath_attr, doc, 'div/p', 'y', fatal=True)

----------



Test Class Name: TestUtil