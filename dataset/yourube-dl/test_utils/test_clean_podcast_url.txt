def clean_podcast_url(url):
    return re.sub('(?x)\n        (?:\n            (?:\n                chtbl\\.com/track|\n                media\\.blubrry\\.com| # https://create.blubrry.com/resources/podcast-media-download-statistics/getting-started/\n                play\\.podtrac\\.com\n            )/[^/]+|\n            (?:dts|www)\\.podtrac\\.com/(?:pts/)?redirect\\.[0-9a-z]{3,4}| # http://analytics.podtrac.com/how-to-measure\n            flex\\.acast\\.com|\n            pd(?:\n                cn\\.co| # https://podcorn.com/analytics-prefix/\n                st\\.fm # https://podsights.com/docs/\n            )/e\n        )/', '', url)

----------

def test_clean_podcast_url(self):
    self.assertEqual(clean_podcast_url('https://www.podtrac.com/pts/redirect.mp3/chtbl.com/track/5899E/traffic.megaphone.fm/HSW7835899191.mp3'), 'https://traffic.megaphone.fm/HSW7835899191.mp3')
    self.assertEqual(clean_podcast_url('https://play.podtrac.com/npr-344098539/edge1.pod.npr.org/anon.npr-podcasts/podcast/npr/waitwait/2020/10/20201003_waitwait_wwdtmpodcast201003-015621a5-f035-4eca-a9a1-7c118d90bc3c.mp3'), 'https://edge1.pod.npr.org/anon.npr-podcasts/podcast/npr/waitwait/2020/10/20201003_waitwait_wwdtmpodcast201003-015621a5-f035-4eca-a9a1-7c118d90bc3c.mp3')

----------



Test Class Name: TestUtil