def unified_timestamp(date_str, day_first=True):
    if date_str is None:
        return None
    date_str = re.sub('\\s+', ' ', re.sub('(?i)[,|]|(mon|tues?|wed(nes)?|thu(rs)?|fri|sat(ur)?)(day)?', '', date_str))
    pm_delta = 12 if re.search('(?i)PM', date_str) else 0
    (timezone, date_str) = extract_timezone(date_str)
    date_str = re.sub('(?i)\\s*(?:AM|PM)(?:\\s+[A-Z]+)?', '', date_str)
    m = re.search('\\d{1,2}:\\d{1,2}(?:\\.\\d+)?(?P<tz>\\s*[A-Z]+)$', date_str)
    if m:
        date_str = date_str[:-len(m.group('tz'))]
    m = re.search('^([0-9]{4,}-[0-9]{1,2}-[0-9]{1,2}T[0-9]{1,2}:[0-9]{1,2}:[0-9]{1,2}\\.[0-9]{6})[0-9]+$', date_str)
    if m:
        date_str = m.group(1)
    for expression in date_formats(day_first):
        try:
            dt = datetime.datetime.strptime(date_str, expression) - timezone + datetime.timedelta(hours=pm_delta)
            return calendar.timegm(dt.timetuple())
        except ValueError:
            pass
    timetuple = email.utils.parsedate_tz(date_str)
    if timetuple:
        return calendar.timegm(timetuple) + pm_delta * 3600 - timezone.total_seconds()

----------

def test_unified_timestamps(self):
    self.assertEqual(unified_timestamp('December 21, 2010'), 1292889600)
    self.assertEqual(unified_timestamp('8/7/2009'), 1247011200)
    self.assertEqual(unified_timestamp('Dec 14, 2012'), 1355443200)
    self.assertEqual(unified_timestamp('2012/10/11 01:56:38 +0000'), 1349920598)
    self.assertEqual(unified_timestamp('1968 12 10'), -33436800)
    self.assertEqual(unified_timestamp('1968-12-10'), -33436800)
    self.assertEqual(unified_timestamp('28/01/2014 21:00:00 +0100'), 1390939200)
    self.assertEqual(unified_timestamp('11/26/2014 11:30:00 AM PST', day_first=False), 1417001400)
    self.assertEqual(unified_timestamp('2/2/2015 6:47:40 PM', day_first=False), 1422902860)
    self.assertEqual(unified_timestamp('Feb 14th 2016 5:45PM'), 1455471900)
    self.assertEqual(unified_timestamp('25-09-2014'), 1411603200)
    self.assertEqual(unified_timestamp('27.02.2016 17:30'), 1456594200)
    self.assertEqual(unified_timestamp('UNKNOWN DATE FORMAT'), None)
    self.assertEqual(unified_timestamp('May 16, 2016 11:15 PM'), 1463440500)
    self.assertEqual(unified_timestamp('Feb 7, 2016 at 6:35 pm'), 1454870100)
    self.assertEqual(unified_timestamp('2017-03-30T17:52:41Q'), 1490896361)
    self.assertEqual(unified_timestamp('Sep 11, 2013 | 5:49 AM'), 1378878540)
    self.assertEqual(unified_timestamp('December 15, 2017 at 7:49 am'), 1513324140)
    self.assertEqual(unified_timestamp('2018-03-14T08:32:43.1493874+00:00'), 1521016363)
    self.assertEqual(unified_timestamp('December 31 1969 20:00:01 EDT'), 1)
    self.assertEqual(unified_timestamp('Wednesday 31 December 1969 18:01:26 MDT'), 86)
    self.assertEqual(unified_timestamp('12/31/1969 20:01:18 EDT', False), 78)

----------



Test Class Name: TestUtil