def xpath_text(node, xpath, name=None, fatal=False, default=NO_DEFAULT):
    n = xpath_element(node, xpath, name, fatal=fatal, default=default)
    if n is None or n == default:
        return n
    if n.text is None:
        if default is not NO_DEFAULT:
            return default
        elif fatal:
            name = xpath if name is None else name
            raise ExtractorError("Could not find XML element's text %s" % name)
        else:
            return None
    return n.text

----------

def test_xpath_text(self):
    testxml = '<root>\n            <div>\n                <p>Foo</p>\n            </div>\n        </root>'
    doc = compat_etree_fromstring(testxml)
    self.assertEqual(xpath_text(doc, 'div/p'), 'Foo')
    self.assertEqual(xpath_text(doc, 'div/bar', default='default'), 'default')
    self.assertTrue(xpath_text(doc, 'div/bar') is None)
    self.assertRaises(ExtractorError, xpath_text, doc, 'div/bar', fatal=True)

----------



Test Class Name: TestUtil