def parse_dfxp_time_expr(time_expr):
    if not time_expr:
        return
    mobj = re.match('^(?P<time_offset>\\d+(?:\\.\\d+)?)s?$', time_expr)
    if mobj:
        return float(mobj.group('time_offset'))
    mobj = re.match('^(\\d+):(\\d\\d):(\\d\\d(?:(?:\\.|:)\\d+)?)$', time_expr)
    if mobj:
        return 3600 * int(mobj.group(1)) + 60 * int(mobj.group(2)) + float(mobj.group(3).replace(':', '.'))

----------

def test_parse_dfxp_time_expr(self):
    self.assertEqual(parse_dfxp_time_expr(None), None)
    self.assertEqual(parse_dfxp_time_expr(''), None)
    self.assertEqual(parse_dfxp_time_expr('0.1'), 0.1)
    self.assertEqual(parse_dfxp_time_expr('0.1s'), 0.1)
    self.assertEqual(parse_dfxp_time_expr('00:00:01'), 1.0)
    self.assertEqual(parse_dfxp_time_expr('00:00:01.100'), 1.1)
    self.assertEqual(parse_dfxp_time_expr('00:00:01:100'), 1.1)

----------



Test Class Name: TestUtil