def match(value, pattern='', ignorecase=False, multiline=False):
    """ Perform a `re.match` returning a boolean """
    return regex(value, pattern, ignorecase, multiline, 'match')

----------

def test_sudo(mocker, parser, reset_cli_args):
    options = parser.parse_args([])
    context._init_global_context(options)
    sudo = become_loader.get('sudo')
    sh = shell_loader.get('sh')
    sh.executable = '/bin/bash'
    sudo.set_options(direct={'become_user': 'foo', 'become_flags': '-n -s -H'})
    cmd = sudo.build_become_command('/bin/foo', sh)
    assert re.match("sudo\\s+-n -s -H\\s+-u foo /bin/bash -c 'echo BECOME-SUCCESS-.+? ; /bin/foo'", cmd), cmd
    sudo.set_options(direct={'become_user': 'foo', 'become_flags': '-n -s -H', 'become_pass': 'testpass'})
    cmd = sudo.build_become_command('/bin/foo', sh)
    assert re.match('sudo\\s+-s\\s-H\\s+-p "\\[sudo via ansible, key=.+?\\] password:" -u foo /bin/bash -c \'echo BECOME-SUCCESS-.+? ; /bin/foo\'', cmd), cmd
    sudo.set_options(direct={'become_user': 'foo', 'become_flags': '-snH', 'become_pass': 'testpass'})
    cmd = sudo.build_become_command('/bin/foo', sh)
    assert re.match('sudo\\s+-sH\\s+-p "\\[sudo via ansible, key=.+?\\] password:" -u foo /bin/bash -c \'echo BECOME-SUCCESS-.+? ; /bin/foo\'', cmd), cmd
    sudo.set_options(direct={'become_user': 'foo', 'become_flags': '--non-interactive -s -H', 'become_pass': 'testpass'})
    cmd = sudo.build_become_command('/bin/foo', sh)
    assert re.match('sudo\\s+-s\\s-H\\s+-p "\\[sudo via ansible, key=.+?\\] password:" -u foo /bin/bash -c \'echo BECOME-SUCCESS-.+? ; /bin/foo\'', cmd), cmd
    sudo.set_options(direct={'become_user': 'foo', 'become_flags': '--non-interactive -nC5 -s -H', 'become_pass': 'testpass'})
    cmd = sudo.build_become_command('/bin/foo', sh)
    assert re.match('sudo\\s+-C5\\s-s\\s-H\\s+-p "\\[sudo via ansible, key=.+?\\] password:" -u foo /bin/bash -c \'echo BECOME-SUCCESS-.+? ; /bin/foo\'', cmd), cmd

----------



Test Class Name: default