def compile(self, play, dep_chain=None):
    """
        Returns the task list for this role, which is created by first
        recursively compiling the tasks for all direct dependencies, and
        then adding on the tasks for this role.

        The role compile() also remembers and saves the dependency chain
        with each task, so tasks know by which route they were found, and
        can correctly take their parent's tags/conditionals into account.
        """
    from ansible.playbook.block import Block
    from ansible.playbook.task import Task
    block_list = []
    if dep_chain is None:
        dep_chain = []
    new_dep_chain = dep_chain + [self]
    deps = self.get_direct_dependencies()
    for dep in deps:
        dep_blocks = dep.compile(play=play, dep_chain=new_dep_chain)
        block_list.extend(dep_blocks)
    for task_block in self._task_blocks:
        new_task_block = task_block.copy()
        new_task_block._dep_chain = new_dep_chain
        new_task_block._play = play
        block_list.append(new_task_block)
    eor_block = Block(play=play)
    eor_block._loader = self._loader
    eor_block._role = self
    eor_block._variable_manager = self._variable_manager
    eor_block.run_once = False
    eor_task = Task(block=eor_block)
    eor_task._role = self
    eor_task.action = 'meta'
    eor_task.args = {'_raw_params': 'role_complete'}
    eor_task.implicit = True
    eor_task.tags = ['always']
    eor_task.when = True
    eor_block.block = [eor_task]
    block_list.append(eor_block)
    return block_list

----------

def test_play_compile():
    p = Play.load(dict(name='test play', hosts=['foo'], gather_facts=False, tasks=[dict(action='shell echo "hello world"')]))
    blocks = p.compile()
    assert len(blocks) == 4

----------



Test Class Name: default