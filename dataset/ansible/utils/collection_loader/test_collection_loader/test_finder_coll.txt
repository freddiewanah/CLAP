def find_module(self, fullname, path=None):
    finder = self._get_finder(fullname)
    if finder is None:
        return None
    elif HAS_FILE_FINDER and isinstance(finder, FileFinder):
        return finder.find_module(fullname)
    else:
        return finder.find_module(fullname, path=[self._pathctx])

----------

def test_finder_coll():
    f = get_default_finder()
    tests = [{'name': 'ansible_collections.testns.testcoll', 'test_paths': [default_test_collection_paths]}, {'name': 'ansible_collections.ansible.builtin', 'test_paths': [['/bogus'], default_test_collection_paths]}]
    for test_dict in tests:
        globals().update(test_dict)
        parent_pkg = name.rpartition('.')[0]
        for paths in test_paths:
            paths = [os.path.join(p, parent_pkg.replace('.', '/')) for p in paths]
            loader = f.find_module(name, path=paths)
            assert isinstance(loader, _AnsibleCollectionPkgLoader)

----------



Test Class Name: default