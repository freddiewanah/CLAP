def add_collection_to_versions_and_dates(fragment, collection_name, is_module, return_docs=False):

    def add(options, option, collection_name_field):
        if collection_name_field not in options:
            options[collection_name_field] = collection_name
    _process_versions_and_dates(fragment, is_module, return_docs, add)

----------

@pytest.mark.parametrize('is_module,return_docs,fragment,expected_fragment', ADD_TESTS)
def test_add(is_module, return_docs, fragment, expected_fragment):
    fragment_copy = copy.deepcopy(fragment)
    add_collection_to_versions_and_dates(fragment_copy, 'foo.bar', is_module, return_docs)
    assert fragment_copy == expected_fragment

----------



Test Class Name: default