def do_encrypt(result, encrypt, salt_size=None, salt=None, ident=None):
    return passlib_or_crypt(result, encrypt, salt_size=salt_size, salt=salt, ident=ident)

----------

@pytest.mark.skipif(sys.platform.startswith('darwin'), reason='macOS requires passlib')
def test_do_encrypt_no_passlib():
    with passlib_off():
        assert not encrypt.PASSLIB_AVAILABLE
        assert encrypt.do_encrypt('123', 'md5_crypt', salt='12345678') == '$1$12345678$tRy4cXc3kmcfRZVj4iFXr/'
        with pytest.raises(AnsibleError):
            encrypt.do_encrypt('123', 'crypt16', salt='12')

----------



Test Class Name: passlib_off