def evaluate_conditional(self, templar: Templar, all_vars: dict[str, t.Any]) -> bool:
    """
        Loops through the conditionals set on this object, returning
        False if any of them evaluate as such.
        """
    return self.evaluate_conditional_with_result(templar, all_vars)[0]

----------

def test_cond_eval():
    fake_loader = DictDataLoader({})
    variables = {'foo': True}
    templar = Templar(loader=fake_loader, variables=variables)
    cond = Conditional(loader=fake_loader)
    cond.when = ['foo']
    with templar.set_temporary_context(jinja2_native=True):
        assert cond.evaluate_conditional(templar, variables)

----------



Test Class Name: default