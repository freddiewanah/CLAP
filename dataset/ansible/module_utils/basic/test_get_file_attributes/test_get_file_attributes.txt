def get_file_attributes(self, path, include_version=True):
    output = {}
    attrcmd = self.get_bin_path('lsattr', False)
    if attrcmd:
        flags = '-vd' if include_version else '-d'
        attrcmd = [attrcmd, flags, path]
        try:
            (rc, out, err) = self.run_command(attrcmd)
            if rc == 0:
                res = out.split()
                attr_flags_idx = 0
                if include_version:
                    attr_flags_idx = 1
                    output['version'] = res[0].strip()
                output['attr_flags'] = res[attr_flags_idx].replace('-', '').strip()
                output['attributes'] = format_attributes(output['attr_flags'])
        except Exception:
            pass
    return output

----------

@pytest.mark.parametrize('stdin, data', product(({},), DATA), indirect=['stdin'])
def test_get_file_attributes(am, stdin, mocker, data):
    mocker.patch.object(AnsibleModule, 'get_bin_path', return_value=(0, '/usr/bin/lsattr', ''))
    mocker.patch.object(AnsibleModule, 'run_command', return_value=(0, data[0], ''))
    result = am.get_file_attributes('/path/to/file')
    for (key, value) in data[1].items():
        assert key in result and result[key] == value

----------



Test Class Name: default