def get_uptime_facts(self):
    uptime_facts = {}
    (rc, out, err) = self.module.run_command('/usr/bin/kstat -p unix:0:system_misc:boot_time')
    if rc != 0:
        return
    uptime_facts['uptime_seconds'] = int(time.time() - int(out.split('\t')[1]))
    return uptime_facts

----------

def test_sunos_get_uptime_facts(mocker):
    kstat_output = '\nunix:0:system_misc:boot_time\t1548249689\n'
    module_mock = mocker.patch('ansible.module_utils.basic.AnsibleModule')
    module = module_mock()
    module.run_command.return_value = (0, kstat_output, '')
    inst = sunos.SunOSHardware(module)
    mocker.patch('time.time', return_value=1567052602.5089788)
    expected = int(time.time()) - 1548249689
    result = inst.get_uptime_facts()
    assert expected == result['uptime_seconds']

----------



Test Class Name: default