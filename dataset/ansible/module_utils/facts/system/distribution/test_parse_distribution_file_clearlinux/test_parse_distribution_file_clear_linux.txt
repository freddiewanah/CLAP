def parse_distribution_file_ClearLinux(self, name, data, path, collected_facts):
    clear_facts = {}
    if 'clearlinux' not in name.lower():
        return (False, clear_facts)
    pname = re.search('NAME="(.*)"', data)
    if pname:
        if 'Clear Linux' not in pname.groups()[0]:
            return (False, clear_facts)
        clear_facts['distribution'] = pname.groups()[0]
    version = re.search('VERSION_ID=(.*)', data)
    if version:
        clear_facts['distribution_major_version'] = version.groups()[0]
        clear_facts['distribution_version'] = version.groups()[0]
    release = re.search('ID=(.*)', data)
    if release:
        clear_facts['distribution_release'] = release.groups()[0]
    return (True, clear_facts)

----------

def test_parse_distribution_file_clear_linux(mock_module, test_input):
    test_input['data'] = open(os.path.join(os.path.dirname(__file__), '../../fixtures/distribution_files/ClearLinux')).read()
    result = (True, {'distribution': 'Clear Linux OS', 'distribution_major_version': '28120', 'distribution_release': 'clear-linux-os', 'distribution_version': '28120'})
    distribution = DistributionFiles(module=mock_module())
    assert result == distribution.parse_distribution_file_ClearLinux(**test_input)

----------



Test Class Name: default