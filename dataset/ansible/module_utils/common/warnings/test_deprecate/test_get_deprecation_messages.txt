def deprecate(msg, version=None, date=None, collection_name=None):
    if isinstance(msg, string_types):
        if date is not None:
            _global_deprecations.append({'msg': msg, 'date': date, 'collection_name': collection_name})
        else:
            _global_deprecations.append({'msg': msg, 'version': version, 'collection_name': collection_name})
    else:
        raise TypeError('deprecate requires a string not a %s' % type(msg))

----------

def test_get_deprecation_messages(deprecation_messages, reset):
    for d in deprecation_messages:
        deprecate(**d)
    accessor_deprecations = get_deprecation_messages()
    assert isinstance(accessor_deprecations, tuple)
    assert len(accessor_deprecations) == 7

----------



Test Class Name: default