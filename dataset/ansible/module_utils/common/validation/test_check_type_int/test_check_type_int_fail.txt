def check_type_int(value):
    """Verify that the value is an integer and return it or convert the value
    to an integer and return it

    Raises :class:`TypeError` if unable to convert to an int

    :arg value: String or int to convert of verify

    :return: int of given value
    """
    if isinstance(value, integer_types):
        return value
    if isinstance(value, string_types):
        try:
            return int(value)
        except ValueError:
            pass
    raise TypeError('%s cannot be converted to an int' % type(value))

----------

def test_check_type_int_fail():
    test_cases = ({'k1': 'v1'}, (b'1', 1), (3.14159, 3), 'b')
    for case in test_cases:
        with pytest.raises(TypeError) as e:
            check_type_int(case)
        assert 'cannot be converted to an int' in to_native(e.value)

----------



Test Class Name: default