def check_type_list(value):
    """Verify that the value is a list or convert to a list

    A comma separated string will be split into a list. Raises a :class:`TypeError`
    if unable to convert to a list.

    :arg value: Value to validate or convert to a list

    :returns: Original value if it is already a list, single item list if a
        float, int, or string without commas, or a multi-item list if a
        comma-delimited string.
    """
    if isinstance(value, list):
        return value
    if isinstance(value, string_types):
        return value.split(',')
    elif isinstance(value, int) or isinstance(value, float):
        return [str(value)]
    raise TypeError('%s cannot be converted to a list' % type(value))

----------

def test_check_type_list():
    test_cases = (([1, 2], [1, 2]), (1, ['1']), (['a', 'b'], ['a', 'b']), ('a', ['a']), (3.14159, ['3.14159']), ('a,b,1,2', ['a', 'b', '1', '2']))
    for case in test_cases:
        assert case[1] == check_type_list(case[0])

----------



Test Class Name: default