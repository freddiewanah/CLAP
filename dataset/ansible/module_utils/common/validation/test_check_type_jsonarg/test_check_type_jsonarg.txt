def check_type_jsonarg(value):
    """Return a jsonified string. Sometimes the controller turns a json string
    into a dict/list so transform it back into json here

    Raises :class:`TypeError` if unable to covert the value

    """
    if isinstance(value, (text_type, binary_type)):
        return value.strip()
    elif isinstance(value, (list, tuple, dict)):
        return jsonify(value)
    raise TypeError('%s cannot be converted to a json string' % type(value))

----------

def test_check_type_jsonarg():
    test_cases = (('a', 'a'), ('a  ', 'a'), (b'99', b'99'), (b'99  ', b'99'), ({'k1': 'v1'}, '{"k1": "v1"}'), ([1, 'a'], '[1, "a"]'), ((1, 2, 'three'), '[1, 2, "three"]'))
    for case in test_cases:
        assert case[1] == check_type_jsonarg(case[0])

----------



Test Class Name: default