def dict_merge(a, b):
    """recursively merges dicts. not just simple a['key'] = b['key'], if
    both a and b have a key whose value is a dict then dict_merge is called
    on both values and the result stored in the returned dictionary."""
    if not isinstance(b, dict):
        return b
    result = deepcopy(a)
    for (k, v) in b.items():
        if k in result and isinstance(result[k], dict):
            result[k] = dict_merge(result[k], v)
        else:
            result[k] = deepcopy(v)
    return result

----------

def test_dict_merge_invalid_dict(self):
    """ if b is not a dict, return b """
    res = dict_merge({}, None)
    assert res is None

----------



Test Class Name: TestCaseAzureIncidental