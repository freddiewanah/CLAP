def text(body: str, status: int=200, headers: Optional[Dict[str, str]]=None, content_type: str='text/plain; charset=utf-8') -> HTTPResponse:
    """
    Returns response object with body in text format.

    :param body: Response data to be encoded.
    :param status: Response code.
    :param headers: Custom Headers.
    :param content_type: the content type (string) of the response
    """
    if not isinstance(body, str):
        raise TypeError(f'Bad body type. Expected str, got {type(body).__name__})')
    return HTTPResponse(body, status=status, headers=headers, content_type=content_type)

----------

def test_bp_middleware_with_route(app: Sanic):
    blueprint = Blueprint('test_bp_middleware')

    @blueprint.middleware('response')
    async def process_response(request, response):
        return text('OK')

    @app.route('/')
    async def handler(request):
        return text('FAIL')

    @blueprint.route('/bp')
    async def bp_handler(request):
        return text('FAIL')
    app.blueprint(blueprint)
    (request, response) = app.test_client.get('/bp')
    assert response.status == 200
    assert response.text == 'OK'

----------



Test Class Name: default