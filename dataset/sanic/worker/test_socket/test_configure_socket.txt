def remove_unix_socket(path: Optional[str]) -> None:
    """Remove dead unix socket during server exit."""
    if not path:
        return
    try:
        if stat.S_ISSOCK(os.stat(path, follow_symlinks=False).st_mode):
            with socket.socket(socket.AF_UNIX) as testsock:
                try:
                    testsock.connect(path)
                except ConnectionRefusedError:
                    os.unlink(path)
    except FileNotFoundError:
        pass

----------

def test_configure_socket():
    socket_address = './test.sock'
    path = Path.cwd() / socket_address
    assert not path.exists()
    configure_socket({'unix': socket_address, 'backlog': 100})
    assert path.exists()
    remove_unix_socket(socket_address)
    assert not path.exists()

----------



Test Class Name: default