def set_body(self, body: Any, dumps: Optional[Callable[..., str]]=None, **dumps_kwargs: Any) -> None:
    """Sets a new response body using the given dumps function
        and kwargs, or falling back to the defaults given when
        creating the object if none are specified.
        """
    self._body_manually_set = False
    self._raw_body = body
    use_dumps = dumps or self._use_dumps
    use_dumps_kwargs = dumps_kwargs if dumps else self._use_dumps_kwargs
    self._body = self._encode_body(use_dumps(body, **use_dumps_kwargs))

----------

def test_override_dumps_and_kwargs(json_app: Sanic):
    custom_dumps_1 = Mock(return_value='custom1')
    custom_dumps_2 = Mock(return_value='custom2')

    @json_app.get('/json-custom')
    async def handle_custom(request: Request):
        return json_response(JSON_BODY, dumps=custom_dumps_1, prry='platypus')

    @json_app.on_response
    def set_body(request: Request, response: JSONResponse):
        response.set_body(JSON_BODY, dumps=custom_dumps_2, platypus='prry')
    (_, resp) = json_app.test_client.get('/json-custom')
    assert resp.body == 'custom2'.encode()
    custom_dumps_1.assert_called_once_with(JSON_BODY, prry='platypus')
    custom_dumps_2.assert_called_once_with(JSON_BODY, platypus='prry')

----------



Test Class Name: default